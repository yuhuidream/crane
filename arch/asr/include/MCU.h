/******************************************************************************
 *
 * Name:	MCU.h
 * Project:	ARMADA PXA1926 (TTD-2/Eden) Z1
 * Purpose:	Testing
 *
 ******************************************************************************/

/******************************************************************************
 *
 *  (C)Copyright 2005 - 2013 Marvell. All Rights Reserved.
 *  
 *  THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF MARVELL.
 *  The copyright notice above does not evidence any actual or intended 
 *  publication of such source code.
 *  This Module contains Proprietary Information of Marvell and should be
 *  treated as Confidential.
 *  The information in this file is provided for the exclusive use of the 
 *  licensees of Marvell.
 *  Such users have the right to use, modify, and incorporate this code into 
 *  products for purposes authorized by the license agreement provided they 
 *  include this notice and the associated copyright notice with any such
 *  product. 
 *  The information in this file is provided "AS IS" without warranty.
 *
 ******************************************************************************/

/******************************************************************************
 *
 * This file was automatically generated by reg.pl using  *	MCU.xml
 *
 ******************************************************************************/

/******************************************************************************
 *
 * History:
 *
 ********* PLEASE INSERT THE CVS HISTORY OF THE PREVIOUS VERSION HERE. *********
 *******************************************************************************/

#ifndef	__INC_MCU_H
#define	__INC_MCU_H

typedef struct
{
    __IO uint32_t MC_ID;  //0x0000 offset
    __IO uint32_t MC_STATUS;  //0x0004 offset
    __IO uint32_t DRAM_STATUS;  //0x0008 offset
    __IO uint32_t RESERVED0[(0x20-0x08)/4-1];
    __IO uint32_t USER_COMMAND_0;  //0x0020 offset
    __IO uint32_t USER_COMMAND_1;  //0x0024 offset
    __IO uint32_t RESERVED1[(0x40-0x24)/4-1];
    __IO uint32_t SRAM_CONTROL;  //0x0040 offset
    __IO uint32_t MC_CONTROL_0;  //0x0044 offset
    __IO uint32_t EXCLUSIVE_MONITOR;  //0x0048 offset
    __IO uint32_t COHERENCY;  //0x004C offset
    __IO uint32_t RZ_ACCESS_CTL;  //0x0050 offset
    __IO uint32_t PHY_PWR_CTL;  //0x0054 offset
    __IO uint32_t WCB_CONTROL;  //0x0058 offset
    __IO uint32_t BQ_CONTROL;  //0x005C offset
    __IO uint32_t ROB_CONTROL;  //0x0060 offset
    __IO uint32_t RESERVED2[(0x80-0x60)/4-1];
    __IO uint32_t PORT_WEIGHT;  //0x0080 offset
    __IO uint32_t PORT_PRIORITY;  //0x0084 offset
    __IO uint32_t RRB_STARVATION_0;  //0x0088 offset
    __IO uint32_t RRB_STARVATION_1;  //0x008C offset
    __IO uint32_t RESERVED3[(0xC0-0x8C)/4-1];
    __IO uint32_t REGTABLE_CONTROL;  //0x00C0 offset
    __IO uint32_t REGTABLE_DATA_0;  //0x00C4 offset
    __IO uint32_t REGTABLE_DATA_1;  //0x00C8 offset
    __IO uint32_t RESERVED4[(0x100-0xC8)/4-1];
    __IO uint32_t PC_CONFIG0;  //0x0100 offset
    __IO uint32_t PC_CONFIG1;  //0x0104 offset
    __IO uint32_t PC_STATUS;  //0x0108 offset
    __IO uint32_t PC_CONTROL;  //0x010C offset
    __IO uint32_t PC[8];  //0x0110 ~ 0x12C offset
    __IO uint32_t RESERVED5[(0x140-0x12C)/4-1];
    __IO uint32_t ISR;  //0x0140 offset
    __IO uint32_t IER;  //0x0144 offset
    __IO uint32_t RESERVED6[(0x150-0x144)/4-1];
    __IO uint32_t ADC_ERR_ID;  //0x0150 offset
    __IO uint32_t ADC_ERR_ADR_L;  //0x0154 offset
    __IO uint32_t ADC_ERR_ADR_H;  //0x0158 offset
    __IO uint32_t RESERVED7;
    __IO uint32_t AM_PERIOD;  //0x0160 offset
    __IO uint32_t AM_TH;  //0x0164 offset
    __IO uint32_t RESERVED8[(0x1C4-0x164)/4-1];
    __IO uint32_t TEST_CONTROL_0;  //0x01C4 offset
    __IO uint32_t TEST_CONTROL_1;  //0x01C8 offset
    __IO uint32_t RESERVED9[(0x200-0x1C8)/4-1];
    __IO uint32_t CH0_MMAP0;  //0x0200 offset
    __IO uint32_t CH0_MMAP1;  //0x0204 offset
    __IO uint32_t RESERVED10[(0x210-0x204)/4-1];
    __IO uint32_t CH0_PMAP0;  //0x0210 offset
    __IO uint32_t CH0_PMAP1;  //0x0214 offset
    __IO uint32_t RESERVED11[(0x240-0x214)/4-1];
    __IO uint32_t CH0_TZ_RANGE0_CS0;  //0x0240 offset
    __IO uint32_t CH0_TZ_RANGE1_CS0;  //0x0244 offset
    __IO uint32_t CH0_TZ_RANGE2_CS0;  //0x0248 offset
    __IO uint32_t CH0_TZ_RANGE3_CS0;  //0x024C offset
    __IO uint32_t CH0_TZ_RANGE0_CS1;  //0x0250 offset
    __IO uint32_t CH0_TZ_RANGE1_CS1;  //0x0254 offset
    __IO uint32_t CH0_TZ_RANGE2_CS1;  //0x0258 offset
    __IO uint32_t CH0_TZ_RANGE3_CS1;  //0x025C offset
    __IO uint32_t RESERVED12[(0x2C0-0x25C)/4-1];
    __IO uint32_t CH0_MC_CONTROL_1;  //0x02C0 offset
    __IO uint32_t CH0_MC_CONTROL_2;  //0x02C4 offset
    __IO uint32_t CH0_MC_CONTROL_3;  //0x02C8 offset
    __IO uint32_t CH0_MC_CONTROL_4;  //0x02CC offset
    __IO uint32_t RESERVED13[(0x300-0x2CC)/4-1];
    __IO uint32_t CH0_DRAM_CONFIG_1;  //0x0300 offset
    __IO uint32_t CH0_DRAM_CONFIG_2;  //0x0304 offset
    __IO uint32_t RESERVED14[(0x310-0x304)/4-1];
    __IO uint32_t CH0_DRAM_CONFIG_5_CS0;  //0x0310 offset
    __IO uint32_t CH0_DRAM_CONFIG_5_CS1;  //0x0314 offset
    __IO uint32_t RESERVED15[(0x340-0x314)/4-1];
    __IO uint32_t CH0_DRAM_CONTROL_1;  //0x0340 offset
    __IO uint32_t CH0_DRAM_CONTROL_2;  //0x0344 offset
    __IO uint32_t CH0_DRAM_CONTROL_3;  //0x0348 offset
    __IO uint32_t RESERVED16[(0x370-0x348)/4-1];
    __IO uint32_t CH0_MRR_DATA;  //0x0370 offset
    __IO uint32_t RESERVED17[(0x380-0x370)/4-1];
    __IO uint32_t CH0_DDR_INIT_TIMING_CONTROL_0;  //0x0380 offset
    __IO uint32_t CH0_DDR_INIT_TIMING_CONTROL_1;  //0x0384 offset
    __IO uint32_t CH0_ZQC_TIMING_0;  //0x0388 offset
    __IO uint32_t CH0_ZQC_TIMING_1;  //0x038C offset
    __IO uint32_t CH0_REFRESH_TIMING;  //0x0390 offset
    __IO uint32_t CH0_SELFREFRESH_TIMING;  //0x0394 offset
    __IO uint32_t CH0_POWERDOWN_TIMING;  //0x0398 offset
    __IO uint32_t CH0_MRS_TIMING;  //0x039C offset
    __IO uint32_t CH0_ACT_TIMING;  //0x03A0 offset
    __IO uint32_t CH0_PRECHARGE_TIMING;  //0x03A4 offset
    __IO uint32_t CH0_CAS_RAS_TIMING;  //0x03A8 offset
    __IO uint32_t CH0_OFF_SPEC_TIMING;  //0x03AC offset
    __IO uint32_t CH0_DRAM_READ_TIMING;  //0x03B0 offset
    __IO uint32_t CH0_DRAM_CA_TRAIN_TIMING;  //0x03B4 offset
    __IO uint32_t RESERVED18[(0x400-0x3B4)/4-1];
    __IO uint32_t CH0_PHY_CONTROL_1;  //0x0400 offset
    __IO uint32_t CH0_PHY_CONTROL_2;  //0x0404 offset
    __IO uint32_t CH0_PHY_CONTROL_3;  //0x0408 offset
    __IO uint32_t CH0_PHY_CONTROL_4;  //0x040C offset
    __IO uint32_t CH0_PHY_CONTROL_5;  //0x0410 offset
    __IO uint32_t CH0_PHY_CONTROL_6;  //0x0414 offset
    __IO uint32_t RESERVED19;
    __IO uint32_t CH0_PHY_CONTROL_8;  //0x041C offset
    __IO uint32_t CH0_PHY_CONTROL_9;  //0x0420 offset
    __IO uint32_t CH0_PHY_CONTROL_10;  //0x0424 offset
    __IO uint32_t CH0_PHY_CONTROL_11;  //0x0428 offset
    __IO uint32_t CH0_PHY_CONTROL_12;  //0x042C offset
    __IO uint32_t CH0_PHY_CONTROL_13;  //0x0430 offset
    __IO uint32_t CH0_PHY_CONTROL_14;  //0x0434 offset
    __IO uint32_t CH0_PHY_CONTROL_15;  //0x0438 offset
    __IO uint32_t RESERVED20[(0x500-0x438)/4-1];
    __IO uint32_t CH0_PHY_DLL_CONTROL_B0;  //0x0500 offset
    __IO uint32_t CH0_PHY_DLL_CONTROL_B1;  //0x0504 offset
    __IO uint32_t CH0_PHY_DLL_CONTROL_B2;  //0x0508 offset
    __IO uint32_t CH0_PHY_DLL_CONTROL_B3;  //0x050C offset
    __IO uint32_t RESERVED21[(0x528-0x50C)/4-1];
    __IO uint32_t CH0_PHY_DLL_BYTE_SELECT;  //0x0528 offset
    __IO uint32_t CH0_PHY_DLL_DLY;  //0x052C offset
    __IO uint32_t RESERVED22[(0x540-0x52C)/4-1];
    __IO uint32_t CH0_PHY_DATA_BYTE_CONTROL_B0;  //0x0540 offset
    __IO uint32_t CH0_PHY_DATA_BYTE_CONTROL_B1;  //0x0544 offset
    __IO uint32_t CH0_PHY_DATA_BYTE_CONTROL_B2;  //0x0548 offset
    __IO uint32_t CH0_PHY_DATA_BYTE_CONTROL_B3;  //0x054C offset
    __IO uint32_t RESERVED23[(0x570-0x54C)/4-1];
    __IO uint32_t CH0_PHY_WL_RL_CONTROL;  //0x0570 offset
    __IO uint32_t RESERVED24[(0x580-0x570)/4-1];
    __IO uint32_t CH0_PHY_WL_DATA_CONTROL_CS0_B0;  //0x0580 offset
    __IO uint32_t CH0_PHY_WL_DATA_CONTROL_CS0_B1;  //0x0584 offset
    __IO uint32_t CH0_PHY_WL_DATA_CONTROL_CS0_B2;  //0x0588 offset
    __IO uint32_t CH0_PHY_WL_DATA_CONTROL_CS0_B3;  //0x058C offset
    __IO uint32_t RESERVED25[(0x5A0-0x58C)/4-1];
    __IO uint32_t CH0_PHY_WL_DATA_CONTROL_CS1_B0;  //0x05A0 offset
    __IO uint32_t CH0_PHY_WL_DATA_CONTROL_CS1_B1;  //0x05A4 offset
    __IO uint32_t CH0_PHY_WL_DATA_CONTROL_CS1_B2;  //0x05A8 offset
    __IO uint32_t CH0_PHY_WL_DATA_CONTROL_CS1_B3;  //0x05AC offset
    __IO uint32_t RESERVED26[(0x610-0x5AC)/4-1];
    __IO uint32_t CH0_PHY_WL_CLK_CONTROL_CS0;  //0x0610 offset
    __IO uint32_t CH0_PHY_WL_CLK_CONTROL_CS1;  //0x0614 offset
    __IO uint32_t RESERVED27[(0x620-0x614)/4-1];
    __IO uint32_t CH0_PHY_WL_AC_CONTROL_0;  //0x0620 offset
    __IO uint32_t CH0_PHY_WL_AC_CONTROL_1;  //0x0624 offset
    __IO uint32_t CH0_PHY_WL_AC_CONTROL_2;  //0x0628 offset
    __IO uint32_t RESERVED28[(0x640-0x628)/4-1];
    __IO uint32_t CH0_PHY_RL_CONTROL_CS0_B0;  //0x0640 offset
    __IO uint32_t CH0_PHY_RL_CONTROL_CS0_B1;  //0x0644 offset
    __IO uint32_t CH0_PHY_RL_CONTROL_CS0_B2;  //0x0648 offset
    __IO uint32_t CH0_PHY_RL_CONTROL_CS0_B3;  //0x064C offset
    __IO uint32_t RESERVED29[(0x660-0x64C)/4-1];
    __IO uint32_t CH0_PHY_RL_CONTROL_CS1_B0;  //0x0660 offset
    __IO uint32_t CH0_PHY_RL_CONTROL_CS1_B1;  //0x0664 offset
    __IO uint32_t CH0_PHY_RL_CONTROL_CS1_B2;  //0x0668 offset
    __IO uint32_t CH0_PHY_RL_CONTROL_CS1_B3;  //0x066C offset
    __IO uint32_t RESERVED30[(0x700-0x66C)/4-1];
    __IO uint32_t CH0_PHY_CA_DELAY0;  //0x0700 offset
    __IO uint32_t CH0_PHY_CA_DELAY1;  //0x0704 offset
    __IO uint32_t CH0_PHY_CA_DELAY2;  //0x0708 offset
    __IO uint32_t RESERVED31[(0x740-0x0708)/4-1];
    __IO uint32_t CH0_PHY_CA_TRAIN_RESULT;  //0x0740 offset
    __IO uint32_t RESERVED32[(0xBB0-0x740)/4-1];
    __IO uint32_t CH1_DRAM_READ_TIMING;  //0x0BB0 offset
}MCU_TypeDef;

#define    MCU_BASE     0xC0100000
#define    MCK5         (( MCU_TypeDef *) MCU_BASE )

/*
 *
 *   THE BIT DEFINES
 *
 */
/*	MC_ID							0x0000	MCU Memory Controller ID and
 *											Revision Register
 */
#define	MC_ID_SHADOWMEM					BIT_29			/* Support shadow memory */
#define	MC_ID_DUALCHANNEL				BIT_28			/* Dual DDR Channel */
#define	MC_ID_ARCHITECTUREVER_MSK		SHIFT24(0xf)	/* Memory Controller Architecture Generation */
#define	MC_ID_ARCHITECTUREVER_BASE		24
#define	MC_ID_REL_YEAR_MSK				SHIFT20(0xf)	/* Release Year (201?) */
#define	MC_ID_REL_YEAR_BASE				20
#define	MC_ID_REL_MONTH_MSK				SHIFT12(0xff)	/* Release Month */
#define	MC_ID_REL_MONTH_BASE			12
#define	MC_ID_REL_DATE_MSK				SHIFT4(0xff)	/* Release Date */
#define	MC_ID_REL_DATE_BASE				4
#define	MC_ID_REV_ECO_MSK				SHIFT0(0xf)		/* Memory Controller branch or ECO Revision Number */
#define	MC_ID_REV_ECO_BASE				0

/*	MC_STATUS						0x0004	MCU Memory Controller Status
 *											Register
 */
#define	MC_STATUS_DPCW_IDLE_1		BIT_22	
#define	MC_STATUS_DPCR_IDLE_1		BIT_21	
#define	MC_STATUS_TC_IDLE_1			BIT_20	
#define	MC_STATUS_BQ_EMPTY_1		BIT_19	
#define	MC_STATUS_SMTQ_IDLE_1		BIT_18	
#define	MC_STATUS_CH_IDLE_1			BIT_16	
#define	MC_STATUS_DPCW_IDLE_0		BIT_14	
#define	MC_STATUS_DPCR_IDLE_0		BIT_13	
#define	MC_STATUS_TC_IDLE_0			BIT_12	
#define	MC_STATUS_BQ_EMPTY_0		BIT_11	
#define	MC_STATUS_SMTQ_IDLE_0		BIT_10	
#define	MC_STATUS_CH_IDLE_0			BIT_8	
#define	MC_STATUS_WCB_EMPTY			BIT_3	/* WCB empty */
#define	MC_STATUS_ROB_EMPTY			BIT_2	/* ROB empty */
#define	MC_STATUS_RRB_EMPTY			BIT_1	/* RRB empty */
#define	MC_STATUS_MC_IDLE			BIT_0	/* Memory Controller idle */

/*	DRAM_STATUS						0x0008	MCU DRAM Status Register */
#define	DRAM_STATUS_STATE_DPD13		BIT_31	
#define	DRAM_STATUS_STATE_SR13		BIT_30	
#define	DRAM_STATUS_STATE_PD13		BIT_29	
#define	DRAM_STATUS_INIT_DONE13		BIT_28	
#define	DRAM_STATUS_STATE_DPD12		BIT_27	
#define	DRAM_STATUS_STATE_SR12		BIT_26	
#define	DRAM_STATUS_STATE_PD12		BIT_25	
#define	DRAM_STATUS_INIT_DONE12		BIT_24	
#define	DRAM_STATUS_STATE_DPD11		BIT_23	
#define	DRAM_STATUS_STATE_SR11		BIT_22	
#define	DRAM_STATUS_STATE_PD11		BIT_21	
#define	DRAM_STATUS_INIT_DONE11		BIT_20	
#define	DRAM_STATUS_STATE_DPD10		BIT_19	
#define	DRAM_STATUS_STATE_SR10		BIT_18	
#define	DRAM_STATUS_STATE_PD10		BIT_17	
#define	DRAM_STATUS_INIT_DONE10		BIT_16	
#define	DRAM_STATUS_STATE_DPD03		BIT_15	
#define	DRAM_STATUS_STATE_SR03		BIT_14	
#define	DRAM_STATUS_STATE_PD03		BIT_13	
#define	DRAM_STATUS_INIT_DONE03		BIT_12	
#define	DRAM_STATUS_STATE_DPD02		BIT_11	
#define	DRAM_STATUS_STATE_SR02		BIT_10	
#define	DRAM_STATUS_STATE_PD02		BIT_9	
#define	DRAM_STATUS_INIT_DONE02		BIT_8	
#define	DRAM_STATUS_STATE_DPD01		BIT_7	
#define	DRAM_STATUS_STATE_SR01		BIT_6	
#define	DRAM_STATUS_STATE_PD01		BIT_5	
#define	DRAM_STATUS_INIT_DONE01		BIT_4	
#define	DRAM_STATUS_STATE_DPD00		BIT_3	
#define	DRAM_STATUS_STATE_SR00		BIT_2	
#define	DRAM_STATUS_STATE_PD00		BIT_1	
#define	DRAM_STATUS_INIT_DONE00		BIT_0	

/*	USER_COMMAND_0					0x0020	MCU User Initiated Command
 *											Register 0
 */
#define	USER_COMMAND_0_CH_MSK					SHIFT28(0x3)	
#define	USER_COMMAND_0_CH_BASE					28
#define	USER_COMMAND_0_CS_MSK					SHIFT24(0xf)	
#define	USER_COMMAND_0_CS_BASE					24
#define	USER_COMMAND_0_DPD_REQ_MSK				SHIFT16(0x3)	
#define	USER_COMMAND_0_DPD_REQ_BASE				16
#define	USER_COMMAND_0_ZQ_RESET					BIT_14			
#define	USER_COMMAND_0_ZQC_SHORT				BIT_13			
#define	USER_COMMAND_0_ZQC_LONG					BIT_12			
#define	USER_COMMAND_0_LMR3_REQ					BIT_11			
#define	USER_COMMAND_0_LMR2_REQ					BIT_10			
#define	USER_COMMAND_0_LMR1_REQ					BIT_9			
#define	USER_COMMAND_0_LMR0_REQ					BIT_8			
#define	USER_COMMAND_0_SR_REQ_MSK				SHIFT6(0x3)		
#define	USER_COMMAND_0_SR_REQ_BASE				6
#define	USER_COMMAND_0_PPD_REQ					BIT_5			
#define	USER_COMMAND_0_APD_REQ					BIT_4			
#define	USER_COMMAND_0_WCB_DRAIN_REQ			BIT_1			/* Drain WCB */
#define	USER_COMMAND_0_SDRAM_INIT_REQ			BIT_0			

/*	USER_COMMAND_1					0x0024	MCU User Initiated Command
 *											Register 1
 */
#define	USER_COMMAND_1_CH_MSK				SHIFT28(0x3)	
#define	USER_COMMAND_1_CH_BASE				28
#define	USER_COMMAND_1_CS_MSK				SHIFT24(0xf)	
#define	USER_COMMAND_1_CS_BASE				24
#define	USER_COMMAND_1_MRW					BIT_17			/* Mode Register Write (MRW) */
#define	USER_COMMAND_1_MRR					BIT_16			/* Mode Register Read (MRR) */
#define	USER_COMMAND_1_MR_ADDRESS_MSK		SHIFT0(0xff)	/* 8-bit mode register address used for MRW and MRR */
#define	USER_COMMAND_1_MR_ADDRESS_BASE		0

/*	SRAM_CONTROL					0x0040	MCU Internal SRAM Control Register */
#define	SRAM_CONTROL_REGTABLE_WTC_MSK					SHIFT28(0xf)	/* WTC for Register Table SRAM */
#define	SRAM_CONTROL_REGTABLE_WTC_BASE					28
#define	SRAM_CONTROL_REGTABLE_RTC_MSK					SHIFT24(0xf)	/* RTC for Register Table SRAM */
#define	SRAM_CONTROL_REGTABLE_RTC_BASE					24
#define	SRAM_CONTROL_WDB_WTC_MSK						SHIFT20(0xf)	/* WTC for WDB SRAM and AXI WDATA SRAM */
#define	SRAM_CONTROL_WDB_WTC_BASE						20
#define	SRAM_CONTROL_WDB_RTC_MSK						SHIFT16(0xf)	/* RTC for WDB SRAM and AXI WDATA SRAM */
#define	SRAM_CONTROL_WDB_RTC_BASE						16
#define	SRAM_CONTROL_SRAM_PDWN_EXIT_WAIT_CYCLE_MSK		SHIFT8(0x3f)	
#define	SRAM_CONTROL_SRAM_PDWN_EXIT_WAIT_CYCLE_BASE		8
#define	SRAM_CONTROL_ROB_WTC_MSK						SHIFT4(0xf)		/* WTC for ROB SRAM */
#define	SRAM_CONTROL_ROB_WTC_BASE						4
#define	SRAM_CONTROL_ROB_RTC_MSK						SHIFT0(0xf)		/* RTC for ROB SRAM */
#define	SRAM_CONTROL_ROB_RTC_BASE						0

/*	MC_CONTROL_0					0x0044	MCU MC Control Register 0 */
#define	MC_CONTROL_0_TRUSTZONE_LOCK					BIT_31			/* Trustzone Lock */
#define	MC_CONTROL_0_AXI_CHOP_CHANGE				BIT_27			
#define	MC_CONTROL_0_AXI_CHOP_MSK					SHIFT24(0x7)	
#define	MC_CONTROL_0_AXI_CHOP_BASE					24
#define	MC_CONTROL_0_BLOCK_ALL_DATA_REQ				BIT_16			/* Block All Data Requests */
#define	MC_CONTROL_0_BLOCK_MSTR_DATA_REQ_MSK		SHIFT8(0xff)	
#define	MC_CONTROL_0_BLOCK_MSTR_DATA_REQ_BASE		8
#define	MC_CONTROL_0_TEST_MODE						BIT_5			/* DDR Direct Access Test Mode */
#define	MC_CONTROL_0_WRITE_LEVEL_MODE				BIT_4			/* Write Level Mode */
#define	MC_CONTROL_0_HALT_SCDLR						BIT_1			
#define	MC_CONTROL_0_DFC_MODE						BIT_0			

/*	EXCLUSIVE_MONITOR				0x0048	MCU Exclusive Monitor Control
 *											Register
 */
#define	EXCLUSIVE_MONITOR_EXCLU_EN_MSK					SHIFT12(0xff)	
#define	EXCLUSIVE_MONITOR_EXCLU_EN_BASE					12
#define	EXCLUSIVE_MONITOR_EXCLUSIVE_ADDRESS_A_MSK		SHIFT7(0x1f)	
#define	EXCLUSIVE_MONITOR_EXCLUSIVE_ADDRESS_A_BASE		7

/*	COHERENCY						0x004C	MCU Data Coherency Check Control
 *											Register
 */
#define	COHERENCY_COHERENCY_CHECK_DISABLE_MSK		SHIFT0(0xff)	
#define	COHERENCY_COHERENCY_CHECK_DISABLE_BASE		0

/*	RZ_ACCESS_CTL					0x0050	MCU Restrict Zone Access Control
 *											Register
 */
#define	RZ_ACCESS_CTL_RZ_ACCESS_EN_MSK		SHIFT0(0xff)	
#define	RZ_ACCESS_CTL_RZ_ACCESS_EN_BASE		0

/*	PHY_PWR_CTL						0x0054	MCU PHY Power Control Register */
#define	PHY_PWR_CTL_AC_ON_DLY_MSK				SHIFT8(0xf)		/* Delay cycles to allow DDR exiting power saving mode after turn on ac line. */
#define	PHY_PWR_CTL_AC_ON_DLY_BASE				8
#define	PHY_PWR_CTL_AC_OFF_DLY_MSK				SHIFT4(0xf)		/* Delay cycles to allow ac line to turn off when DDR entering power saving mode. */
#define	PHY_PWR_CTL_AC_OFF_DLY_BASE				4
#define	PHY_PWR_CTL_PHY_CLK_GATING_EN			BIT_1			/* Enable auto gating off PHY clocks */
#define	PHY_PWR_CTL_PHY_AUTO_AC_OFF_EN			BIT_0			/* Enable auto turn-off address/command line when DDR in power saving mode */

/*	WCB_CONTROL						0x0058	MCU Write Command Buffer (WCB)
 *											Control Register
 */
#define	WCB_CONTROL_WCB_DRAIN_LEVEL_MSK			SHIFT1(0x3)		/* WCB drain level */
#define	WCB_CONTROL_WCB_DRAIN_LEVEL_BASE		1
#define	WCB_CONTROL_AUTO_WCB_DRAIN_EN			BIT_0			/* Enable auto WCB drain */

/*	BQ_CONTROL						0x005C	MCU Bank Queue Control Register */
#define	BQ_CONTROL_BQ_DEPTH_MSK			SHIFT0(0x3)		/* Depth of BQ 1st stage */
#define	BQ_CONTROL_BQ_DEPTH_BASE		0

/*	ROB_CONTROL						0x0060	MCU ROB Control Register */
#define	ROB_CONTROL_ROB_DATA_INTERLEAVING_DIS		BIT_1	
#define	ROB_CONTROL_ROB_DELAY_READ_EN				BIT_0	

/*	PORT_WEIGHT						0x0080	MCU Port RRB Weight Register */
#define	PORT_WEIGHT_WEIGHT_P7_MSK		SHIFT28(0xf)	
#define	PORT_WEIGHT_WEIGHT_P7_BASE		28
#define	PORT_WEIGHT_WEIGHT_P6_MSK		SHIFT24(0xf)	
#define	PORT_WEIGHT_WEIGHT_P6_BASE		24
#define	PORT_WEIGHT_WEIGHT_P5_MSK		SHIFT20(0xf)	
#define	PORT_WEIGHT_WEIGHT_P5_BASE		20
#define	PORT_WEIGHT_WEIGHT_P4_MSK		SHIFT16(0xf)	
#define	PORT_WEIGHT_WEIGHT_P4_BASE		16
#define	PORT_WEIGHT_WEIGHT_P3_MSK		SHIFT12(0xf)	
#define	PORT_WEIGHT_WEIGHT_P3_BASE		12
#define	PORT_WEIGHT_WEIGHT_P2_MSK		SHIFT8(0xf)		
#define	PORT_WEIGHT_WEIGHT_P2_BASE		8
#define	PORT_WEIGHT_WEIGHT_P1_MSK		SHIFT4(0xf)		
#define	PORT_WEIGHT_WEIGHT_P1_BASE		4
#define	PORT_WEIGHT_WEIGHT_P0_MSK		SHIFT0(0xf)		
#define	PORT_WEIGHT_WEIGHT_P0_BASE		0

/*	PORT_PRIORITY					0x0084	MCU Port Priority Control Register */
#define	PORT_PRIORITY_PORT_PRIORITY_EN_MSK		SHIFT24(0xff)	/* Port Priority Enable */
#define	PORT_PRIORITY_PORT_PRIORITY_EN_BASE		24
#define	PORT_PRIORITY_PRIORITY_P7_MSK			SHIFT14(0x3)	
#define	PORT_PRIORITY_PRIORITY_P7_BASE			14
#define	PORT_PRIORITY_PRIORITY_P6_MSK			SHIFT12(0x3)	
#define	PORT_PRIORITY_PRIORITY_P6_BASE			12
#define	PORT_PRIORITY_PRIORITY_P5_MSK			SHIFT10(0x3)	
#define	PORT_PRIORITY_PRIORITY_P5_BASE			10
#define	PORT_PRIORITY_PRIORITY_P4_MSK			SHIFT8(0x3)		
#define	PORT_PRIORITY_PRIORITY_P4_BASE			8
#define	PORT_PRIORITY_PRIORITY_P3_MSK			SHIFT6(0x3)		
#define	PORT_PRIORITY_PRIORITY_P3_BASE			6
#define	PORT_PRIORITY_PRIORITY_P2_MSK			SHIFT4(0x3)		
#define	PORT_PRIORITY_PRIORITY_P2_BASE			4
#define	PORT_PRIORITY_PRIORITY_P1_MSK			SHIFT2(0x3)		
#define	PORT_PRIORITY_PRIORITY_P1_BASE			2
#define	PORT_PRIORITY_PRIORITY_P0_MSK			SHIFT0(0x3)		
#define	PORT_PRIORITY_PRIORITY_P0_BASE			0

/*	RRB_STARVATION_0				0x0088	MCU RRB Starvation Prevention
 *											Register 0
 */
#define	RRB_STARVATION_0_RRB_STARV_P3_MSK		SHIFT24(0xff)	
#define	RRB_STARVATION_0_RRB_STARV_P3_BASE		24
#define	RRB_STARVATION_0_RRB_STARV_P2_MSK		SHIFT16(0xff)	
#define	RRB_STARVATION_0_RRB_STARV_P2_BASE		16
#define	RRB_STARVATION_0_RRB_STARV_P1_MSK		SHIFT8(0xff)	
#define	RRB_STARVATION_0_RRB_STARV_P1_BASE		8
#define	RRB_STARVATION_0_RRB_STARV_P0_MSK		SHIFT0(0xff)	
#define	RRB_STARVATION_0_RRB_STARV_P0_BASE		0

/*	RRB_STARVATION_1				0x008C	MCU RRB Starvation Prevention
 *											Register 1
 */
#define	RRB_STARVATION_1_RRB_STARV_P7_MSK		SHIFT24(0xff)	
#define	RRB_STARVATION_1_RRB_STARV_P7_BASE		24
#define	RRB_STARVATION_1_RRB_STARV_P6_MSK		SHIFT16(0xff)	
#define	RRB_STARVATION_1_RRB_STARV_P6_BASE		16
#define	RRB_STARVATION_1_RRB_STARV_P5_MSK		SHIFT8(0xff)	
#define	RRB_STARVATION_1_RRB_STARV_P5_BASE		8
#define	RRB_STARVATION_1_RRB_STARV_P4_MSK		SHIFT0(0xff)	
#define	RRB_STARVATION_1_RRB_STARV_P4_BASE		0

/*	REGTABLE_CONTROL				0x00C0	MCU Register Table Control Register */
#define	REGTABLE_CONTROL_REGTABLE_SEL_MSK		SHIFT5(0x1f)	/* SRAM Table Select */
#define	REGTABLE_CONTROL_REGTABLE_SEL_BASE		5
#define	REGTABLE_CONTROL_REGTABLE_ADDR_MSK		SHIFT0(0x1f)	/* SRAM Table Addres */
#define	REGTABLE_CONTROL_REGTABLE_ADDR_BASE		0

/*	REGTABLE_DATA_0					0x00C4	MCU Register Table Data Register 0 */
#define	REGTABLE_DATA_0_REGTABLE_REG_DATA_MSK		SHIFT0(0xffffffff)	
#define	REGTABLE_DATA_0_REGTABLE_REG_DATA_BASE		0

/*	REGTABLE_DATA_1					0x00C8	MCU Register Table Data Register 1 */
#define	REGTABLE_DATA_1_REGTABLE_EOP					BIT_17			
#define	REGTABLE_DATA_1_REGTABLE_PAUSE					BIT_16			
#define	REGTABLE_DATA_1_REGTABLE_REG_OFFSET_MSK			SHIFT0(0xfff)	
#define	REGTABLE_DATA_1_REGTABLE_REG_OFFSET_BASE		0

/*	PC_CONFIG0						0x0100	MCU Performance Counter
 *											Configuration Register 0
 */
#define	PC_CONFIG0_PC_REG_EN3				BIT_31			/* Enable performance counter 3 */
#define	PC_CONFIG0_PC_EVENT_SEL3_MSK		SHIFT24(0x3f)	/* event select for counter 3 */
#define	PC_CONFIG0_PC_EVENT_SEL3_BASE		24
#define	PC_CONFIG0_PC_REG_EN2				BIT_23			/* Enable performance counter 2 */
#define	PC_CONFIG0_PC_EVENT_SEL2_MSK		SHIFT16(0x3f)	/* event select for counter 2 */
#define	PC_CONFIG0_PC_EVENT_SEL2_BASE		16
#define	PC_CONFIG0_PC_REG_EN1				BIT_15			/* Enable performance counter 1 */
#define	PC_CONFIG0_PC_EVENT_SEL1_MSK		SHIFT8(0x3f)	/* event select for counter 1 */
#define	PC_CONFIG0_PC_EVENT_SEL1_BASE		8
#define	PC_CONFIG0_PC_REG_EN0				BIT_7			/* Enable performance counter 0 */
#define	PC_CONFIG0_PC_EVENT_SEL0_MSK		SHIFT0(0x3f)	/* event select for counter 0 */
#define	PC_CONFIG0_PC_EVENT_SEL0_BASE		0

/*	PC_CONFIG1						0x0104	MCU Performance Counter
 *											Configuration Register 1
 */
#define	PC_CONFIG1_PC_REG_EN7				BIT_31			/* Enable performance counter 7 */
#define	PC_CONFIG1_PC_EVENT_SEL7_MSK		SHIFT24(0x3f)	/* event select for counter 7 */
#define	PC_CONFIG1_PC_EVENT_SEL7_BASE		24
#define	PC_CONFIG1_PC_REG_EN6				BIT_23			/* Enable performance counter 6 */
#define	PC_CONFIG1_PC_EVENT_SEL6_MSK		SHIFT16(0x3f)	/* Event select for counter 6 */
#define	PC_CONFIG1_PC_EVENT_SEL6_BASE		16
#define	PC_CONFIG1_PC_REG_EN5				BIT_15			/* Enable performance counter 5 */
#define	PC_CONFIG1_PC_EVENT_SEL5_MSK		SHIFT8(0x3f)	/* event select for counter 5 */
#define	PC_CONFIG1_PC_EVENT_SEL5_BASE		8
#define	PC_CONFIG1_PC_REG_EN4				BIT_7			/* Enable performance counter 4 */
#define	PC_CONFIG1_PC_EVENT_SEL4_MSK		SHIFT0(0x3f)	/* event select for counter 4 */
#define	PC_CONFIG1_PC_EVENT_SEL4_BASE		0

/*	PC_STATUS						0x0108	MCU Performance Counter Status
 *											Register
 */
#define	PC_STATUS_PC_OVERFLOW_MSK		SHIFT0(0xff)	/* Performance counter overflow flag */
#define	PC_STATUS_PC_OVERFLOW_BASE		0

/*	PC_CONTROL						0x010C	MCU Performance Counter Control
 *											Register
 */
#define	PC_CONTROL_PC_CLK_DIV_MSK			SHIFT16(0x7)	
#define	PC_CONTROL_PC_CLK_DIV_BASE			16
#define	PC_CONTROL_PC_STOP_COND				BIT_4			
#define	PC_CONTROL_PC_START_COND			BIT_0			

/*	PC								0x0110	MCU Performance Counter Register */
#define	PC_PC_COUNTER_MSK		SHIFT0(0xffffffff)	/* Performance counter */
#define	PC_PC_COUNTER_BASE		0

/*	ISR								0x0140	MCU Interrupt Stautus Register */
#define	ISR_AM_HIGH_INT		BIT_4	/* Activity monitor high threshold interrupt status */
#define	ISR_AM_LOW_INT		BIT_3	/* Activity monitor low threshold interrupt status */
#define	ISR_ADC_INT			BIT_2	/* Address decode error interrupt status */
#define	ISR_PC_INT			BIT_0	/* Performance counter interrupt status */

/*	IER								0x0144	MCU Interrupt Enable Register */
#define	IER_AM_INT_EN		BIT_3	/* Activity monitor threshold interrupt enable */
#define	IER_ADC_INT_EN		BIT_2	/* Address decode error interrupt enable */
#define	IER_PC_INT_EN		BIT_0	/* Performance counter interrupt enable */

/*	ADC_ERR_ID						0x0150	MCU Address Decode Error Master ID
 *											Register
 */
#define	ADC_ERR_ID_ERR_TRANS_TYPE			BIT_31				/* Address decode error transcation type */
#define	ADC_ERR_ID_ERR_MSTR_ID_MSK			SHIFT28(0x7)		/* Address decode error master port ID */
#define	ADC_ERR_ID_ERR_MSTR_ID_BASE			28
#define	ADC_ERR_ID_ERR_TRANS_ID_MSK			SHIFT0(0xfffffff)	/* Address decode error transcation ID */
#define	ADC_ERR_ID_ERR_TRANS_ID_BASE		0

/*	ADC_ERR_ADR_L					0x0154	MCU Address Decode Error Lower
 *											Address Register
 */
#define	ADC_ERR_ADR_L_ERR_ADR_L_MSK			SHIFT0(0xffffffff)	/* Address Decode Error Lower Address */
#define	ADC_ERR_ADR_L_ERR_ADR_L_BASE		0

/*	ADC_ERR_ADR_H					0x0158	MCU Address Decode Error Higher
 *											Address Register
 */
#define	ADC_ERR_ADR_H_ERR_ADR_H_MSK			SHIFT0(0xff)	/* Address Decode Error Higher Address */
#define	ADC_ERR_ADR_H_ERR_ADR_H_BASE		0

/*	AM_PERIOD						0x0160	MCU Activity Monitor Check Period
 *											Register
 */
#define	AM_PERIOD_AM_PERIOD_MSK			SHIFT0(0xffffffff)	/* Activity Monitor Check Period */
#define	AM_PERIOD_AM_PERIOD_BASE		0

/*	AM_TH							0x0164	MCU Activity Monitor Threshold
 *											Register
 */
#define	AM_TH_AM_TH_HIGH_MSK		SHIFT8(0x7f)	/* Activity Monitor High Threshold In Percentage */
#define	AM_TH_AM_TH_HIGH_BASE		8
#define	AM_TH_AM_TH_LOW_MSK			SHIFT0(0x7f)	/* Activity Monitor Low Threshold In Percentage */
#define	AM_TH_AM_TH_LOW_BASE		0

/*	TEST_CONTROL_0					0x01C4	MCU Test Mode Register 0 */
#define	TEST_CONTROL_0_DDR_COMMAND_MSK		SHIFT0(0x7)		
#define	TEST_CONTROL_0_DDR_COMMAND_BASE		0

/*	TEST_CONTROL_1					0x01C8	MCU Test Mode Register 1 */
#define	TEST_CONTROL_1_CHANNEL_MSK		SHIFT24(0x3)		/* DDR Channel */
#define	TEST_CONTROL_1_CHANNEL_BASE		24
#define	TEST_CONTROL_1_CS_MSK			SHIFT20(0xf)		/* Chip-Select */
#define	TEST_CONTROL_1_CS_BASE			20
#define	TEST_CONTROL_1_DDR_CA_MSK		SHIFT0(0xfffff)		
#define	TEST_CONTROL_1_DDR_CA_BASE		0

/*	CH0_MMAP						0x0200	MCU Memory Address Map Register
 *											Channel 0
 */
#define	CH0_MMAP_START_ADDRESS_MSK			SHIFT23(0x1ff)	/* Starting address [31:23] of memory block */
#define	CH0_MMAP_START_ADDRESS_BASE			23
#define	CH0_MMAP_AREA_LENGTH_MSK			SHIFT16(0x1f)	/* Length of memory block */
#define	CH0_MMAP_AREA_LENGTH_BASE			16
#define	CH0_MMAP_START_ADDRESS_HI_MSK		SHIFT8(0xff)	
#define	CH0_MMAP_START_ADDRESS_HI_BASE		8
#define	CH0_MMAP_CS_VALID					BIT_0			

/*	PMAP							0x0210	MCU Memory Controller Physical
 *											Address Map Register
 */
#define	PMAP_BANK_MAPPING_MSK		SHIFT24(0x1f)	/* Bank address assignment boundary */
#define	PMAP_BANK_MAPPING_BASE		24
#define	PMAP_STACKCHIP_MSK			SHIFT12(0x3)	/* Number of Stack Chips */
#define	PMAP_STACKCHIP_BASE			12
#define	PMAP_NOROW_MSK				SHIFT8(0xf)		/* Number of Row address bits */
#define	PMAP_NOROW_BASE				8
#define	PMAP_NOCOL_MSK				SHIFT4(0xf)		/* Number of Column address bits */
#define	PMAP_NOCOL_BASE				4
#define	PMAP_NOBANKGROUP_MSK		SHIFT2(0x3)		/* Number of Bank Groups */
#define	PMAP_NOBANKGROUP_BASE		2
#define	PMAP_NOBANK_MSK				SHIFT0(0x3)		/* Number of Banks */
#define	PMAP_NOBANK_BASE			0

/*	TZ_RANGE_0						0x0240	MCU Trustzone Range 0 Register */
#define	TZ_RANGE_0_TZ_RANGE0_MSK		SHIFT12(0xfffff)	
#define	TZ_RANGE_0_TZ_RANGE0_BASE		12
#define	TZ_RANGE_0_TZ_ENABLE			BIT_8				
#define	TZ_RANGE_0_TZACT_RU_MSK			SHIFT4(0x7)			/* Nonsecure access permission for undefined range */
#define	TZ_RANGE_0_TZACT_RU_BASE		4
#define	TZ_RANGE_0_TZACT_R0_MSK			SHIFT0(0x7)			
#define	TZ_RANGE_0_TZACT_R0_BASE		0

/*	TZ_RANGE_1						0x0244	MCU Trustzone Range 1 Register */
#define	TZ_RANGE_1_TZ_RANGE1_MSK		SHIFT12(0xfffff)	
#define	TZ_RANGE_1_TZ_RANGE1_BASE		12
#define	TZ_RANGE_1_TZACT_R1_MSK			SHIFT0(0x7)			
#define	TZ_RANGE_1_TZACT_R1_BASE		0

/*	TZ_RANGE_2						0x0248	MCU Trustzone Range 2 Register */
#define	TZ_RANGE_2_TZ_RANGE2_MSK		SHIFT12(0xfffff)	
#define	TZ_RANGE_2_TZ_RANGE2_BASE		12
#define	TZ_RANGE_2_TZACT_R2_MSK			SHIFT0(0x7)			
#define	TZ_RANGE_2_TZACT_R2_BASE		0

/*	TZ_RANGE_3						0x024C	MCU Trustzone Range 3 Register */
#define	TZ_RANGE_3_TZ_RANGE3_MSK		SHIFT12(0xfffff)	
#define	TZ_RANGE_3_TZ_RANGE3_BASE		12
#define	TZ_RANGE_3_TZACT_R3_MSK			SHIFT0(0x7)			
#define	TZ_RANGE_3_TZACT_R3_BASE		0

/*	MC_CONTROL_1					0x02C0	MCU MC Control Register 1 */
#define	MC_CONTROL_1_APS_TYPE_MSK					SHIFT28(0x7)	
#define	MC_CONTROL_1_APS_TYPE_BASE					28
#define	MC_CONTROL_1_APS_VALUE_MSK					SHIFT16(0xfff)	
#define	MC_CONTROL_1_APS_VALUE_BASE					16
#define	MC_CONTROL_1_ACS_EN							BIT_15			
#define	MC_CONTROL_1_ACS_EXIT_DLY_MSK				SHIFT12(0x7)	
#define	MC_CONTROL_1_ACS_EXIT_DLY_BASE				12
#define	MC_CONTROL_1_REFPB_MODE						BIT_11			
#define	MC_CONTROL_1_SRX_AUTO_ZQCL_DIS				BIT_9			
#define	MC_CONTROL_1_RDIMM_MODE						BIT_6			
#define	MC_CONTROL_1_AVOID_CA_CONTENTION			BIT_5			
#define	MC_CONTROL_1_TW2R_DIS						BIT_4			
#define	MC_CONTROL_1_PHY_MASK						BIT_3			
#define	MC_CONTROL_1_FORCE_COLD_BOOT				BIT_2			

/*	MC_CONTROL_2					0x02C4	MCU Memory Controller Control
 *											Register 2
 */
#define	MC_CONTROL_2_BLOCK_LOW					BIT_30			
#define	MC_CONTROL_2_BLOCK_HIGH					BIT_29			
#define	MC_CONTROL_2_LOW_LATENCY_DIS			BIT_28			
#define	MC_CONTROL_2_BQ_STARV_TIME_MSK			SHIFT0(0xffff)	/* Initial value for BQ starvation timer */
#define	MC_CONTROL_2_BQ_STARV_TIME_BASE			0

/*	MC_CONTROL_3					0x02C8	MCU Memory Controller Control
 *											Register 3
 */
#define	MC_CONTROL_3_PHY_OUT_FF_BYPASS_MSK		SHIFT8(0xff)	/* PHY output interface timing control */
#define	MC_CONTROL_3_PHY_OUT_FF_BYPASS_BASE		8
#define	MC_CONTROL_3_PHY_IN_FF_BYPASS_MSK		SHIFT0(0xff)	/* PHY input interface timing control */
#define	MC_CONTROL_3_PHY_IN_FF_BYPASS_BASE		0

/*	DRAM_CONFIG_1					0x0300	MCU DRAM Configuration Register 1 */
#define	DRAM_CONFIG_1_WL_SELECT				BIT_23			/* WL Select */
#define	DRAM_CONFIG_1_BURST_LENGTH_MSK		SHIFT20(0x7)	
#define	DRAM_CONFIG_1_BURST_LENGTH_BASE		20
#define	DRAM_CONFIG_1_RL3_OPTION			BIT_19			/* RL3 Option Support */
#define	DRAM_CONFIG_1_CAS_LATENCY_MSK		SHIFT12(0x1f)	/* CAS Latency Value */
#define	DRAM_CONFIG_1_CAS_LATENCY_BASE		12
#define	DRAM_CONFIG_1_CWL_MSK				SHIFT8(0xf)		/* CAS Write Latency Value */
#define	DRAM_CONFIG_1_CWL_BASE				8
#define	DRAM_CONFIG_1_SDRAM_TYPE_MSK		SHIFT4(0xf)		/* SDRAM Memory Type */
#define	DRAM_CONFIG_1_SDRAM_TYPE_BASE		4
#define	DRAM_CONFIG_1_S4_TYPE				BIT_3			
#define	DRAM_CONFIG_1_DATA_WIDTH_MSK		SHIFT0(0x7)		/* DDR data bus width */
#define	DRAM_CONFIG_1_DATA_WIDTH_BASE		0

/*	DRAM_CONFIG_2					0x0304	MCU DRAM Configuration Register 2 */
#define	DRAM_CONFIG_2_MPR						BIT_12			
#define	DRAM_CONFIG_2_ASR_MSK					SHIFT8(0x3)		
#define	DRAM_CONFIG_2_ASR_BASE					8
#define	DRAM_CONFIG_2_OUTEN						BIT_7			/* Output disable bit in DRAM mode register */
#define	DRAM_CONFIG_2_WRITE_LEVEL_EN			BIT_5			
#define	DRAM_CONFIG_2_SDRAM_DLL_DIS				BIT_4			
#define	DRAM_CONFIG_2_CAS_BT					BIT_2			/* DRAM burst type */
#define	DRAM_CONFIG_2_PD_MODE					BIT_1			/* Power down mode (see DRAM specification) */
#define	DRAM_CONFIG_2_DLL_RESET					BIT_0			

/*	DRAM_CONFIG_5					0x0310	MCU DRAM Configuration Register 5 */
#define	DRAM_CONFIG_5_PD_CONTROL			BIT_31			/* PD Control */
#define	DRAM_CONFIG_5_RTT_WR_MSK			SHIFT24(0x3)	/* ODT termination value for write */
#define	DRAM_CONFIG_5_RTT_WR_BASE			24
#define	DRAM_CONFIG_5_RTT_NOM_MSK			SHIFT20(0x7)	/* ODT (On-Die Termination) nominal termination value (see DRAM specification) */
#define	DRAM_CONFIG_5_RTT_NOM_BASE			20
#define	DRAM_CONFIG_5_ODS_MSK				SHIFT16(0xf)	/* Output driver strength (see DRAM specification) */
#define	DRAM_CONFIG_5_ODS_BASE				16
#define	DRAM_CONFIG_5_PASR_MSK				SHIFT0(0xffff)	
#define	DRAM_CONFIG_5_PASR_BASE				0

/*	DRAM_CONTROL_1					0x0340	MCU DRAM Control Register 1 */
#define	DRAM_CONTROL_1_ODT3_READ_EN_MSK			SHIFT28(0xf)	
#define	DRAM_CONTROL_1_ODT3_READ_EN_BASE		28
#define	DRAM_CONTROL_1_ODT3_WRITE_EN_MSK		SHIFT24(0xf)	
#define	DRAM_CONTROL_1_ODT3_WRITE_EN_BASE		24
#define	DRAM_CONTROL_1_ODT2_READ_EN_MSK			SHIFT20(0xf)	
#define	DRAM_CONTROL_1_ODT2_READ_EN_BASE		20
#define	DRAM_CONTROL_1_ODT2_WRITE_EN_MSK		SHIFT16(0xf)	
#define	DRAM_CONTROL_1_ODT2_WRITE_EN_BASE		16
#define	DRAM_CONTROL_1_ODT1_READ_EN_MSK			SHIFT12(0xf)	
#define	DRAM_CONTROL_1_ODT1_READ_EN_BASE		12
#define	DRAM_CONTROL_1_ODT1_WRITE_EN_MSK		SHIFT8(0xf)		
#define	DRAM_CONTROL_1_ODT1_WRITE_EN_BASE		8
#define	DRAM_CONTROL_1_ODT0_READ_EN_MSK			SHIFT4(0xf)		
#define	DRAM_CONTROL_1_ODT0_READ_EN_BASE		4
#define	DRAM_CONTROL_1_ODT0_WRITE_EN_MSK		SHIFT0(0xf)		
#define	DRAM_CONTROL_1_ODT0_WRITE_EN_BASE		0

/*	DRAM_CONTROL_2					0x0344	MCU DRAM Control Register 2 */
#define	DRAM_CONTROL_2_FORCE_ODT_MSK					SHIFT28(0xf)	
#define	DRAM_CONTROL_2_FORCE_ODT_BASE					28
#define	DRAM_CONTROL_2_PAD_TERM_SWITCH_MODE_MSK			SHIFT24(0x3)	
#define	DRAM_CONTROL_2_PAD_TERM_SWITCH_MODE_BASE		24
#define	DRAM_CONTROL_2_ODT3_SWITCH_MODE_MSK				SHIFT6(0x3)		
#define	DRAM_CONTROL_2_ODT3_SWITCH_MODE_BASE			6
#define	DRAM_CONTROL_2_ODT2_SWITCH_MODE_MSK				SHIFT4(0x3)		
#define	DRAM_CONTROL_2_ODT2_SWITCH_MODE_BASE			4
#define	DRAM_CONTROL_2_ODT1_SWITCH_MODE_MSK				SHIFT2(0x3)		
#define	DRAM_CONTROL_2_ODT1_SWITCH_MODE_BASE			2
#define	DRAM_CONTROL_2_ODT0_SWITCH_MODE_MSK				SHIFT0(0x3)		
#define	DRAM_CONTROL_2_ODT0_SWITCH_MODE_BASE			0

/*	DRAM_CONTROL_3					0x0348	MCU DRAM Control Register 3 */
#define	DRAM_CONTROL_3_ODT_WR_DLY_SEL_MSK				SHIFT18(0x3)	
#define	DRAM_CONTROL_3_ODT_WR_DLY_SEL_BASE				18
#define	DRAM_CONTROL_3_ODT_RD_DLY_SEL_MSK				SHIFT16(0x3)	
#define	DRAM_CONTROL_3_ODT_RD_DLY_SEL_BASE				16
#define	DRAM_CONTROL_3_ODT_WR_START_DLY_VAL_MSK			SHIFT12(0xf)	
#define	DRAM_CONTROL_3_ODT_WR_START_DLY_VAL_BASE		12
#define	DRAM_CONTROL_3_ODT_RD_START_DLY_VAL_MSK			SHIFT8(0xf)		
#define	DRAM_CONTROL_3_ODT_RD_START_DLY_VAL_BASE		8
#define	DRAM_CONTROL_3_ODT_WR_EXTEND_VAL_MSK			SHIFT4(0xf)		
#define	DRAM_CONTROL_3_ODT_WR_EXTEND_VAL_BASE			4
#define	DRAM_CONTROL_3_ODT_RD_EXTEND_VAL_MSK			SHIFT0(0xf)		
#define	DRAM_CONTROL_3_ODT_RD_EXTEND_VAL_BASE			0

/*	MRR_DATA						0x0370	MCU Mode Register Read Data
 *											Register
 */
#define	MRR_DATA_MRR_DATA_VALID				BIT_31			
#define	MRR_DATA_MRR_DATA_MSK				SHIFT0(0xff)	
#define	MRR_DATA_MRR_DATA_BASE				0

/*	DDR_INIT_TIMING_CONTROL_0		0x0380	MCU DRAM Initialization Timing
 *											Control Register 0
 */
#define	DDR_INIT_TIMING_CONTROL_0_INIT_COUNT_NOP_MSK		SHIFT0(0xfffff)		
#define	DDR_INIT_TIMING_CONTROL_0_INIT_COUNT_NOP_BASE		0

/*	DDR_INIT_TIMING_CONTROL_1		0x0384	MCU DRAM Initialization Timing
 *											Control Register 1
 */
#define	DDR_INIT_TIMING_CONTROL_1_RESET_COUNT_MSK		SHIFT18(0x1fff)		
#define	DDR_INIT_TIMING_CONTROL_1_RESET_COUNT_BASE		18
#define	DDR_INIT_TIMING_CONTROL_1_INIT_COUNT_MSK		SHIFT0(0x3ffff)		
#define	DDR_INIT_TIMING_CONTROL_1_INIT_COUNT_BASE		0

/*	ZQC_TIMING_0					0x0388	MCU DRAM ZQC Timing Register 0 */
#define	ZQC_TIMING_0_TZQCR_MSK			SHIFT16(0x7f)	/* ZQ calibration reset time */
#define	ZQC_TIMING_0_TZQCR_BASE			16
#define	ZQC_TIMING_0_TZQINIT_MSK		SHIFT0(0x7ff)	/* ZQ power-up  and reset calibration time */
#define	ZQC_TIMING_0_TZQINIT_BASE		0

/*	ZQC_TIMING_1					0x038C	MCU DRAM ZQC Timing Register 1 */
#define	ZQC_TIMING_1_TZQCS_MSK			SHIFT16(0xff)	/* ZQ Normal operation short calibration time */
#define	ZQC_TIMING_1_TZQCS_BASE			16
#define	ZQC_TIMING_1_TZQOPER_MSK		SHIFT0(0x3ff)	/* ZQ Normal operation full calibration time */
#define	ZQC_TIMING_1_TZQOPER_BASE		0

/*	REFRESH_TIMING					0x0390	MCU DRAM Refresh Timing Register */
#define	REFRESH_TIMING_TRFC_MSK			SHIFT16(0x7ff)	/* REFRESH-to-ACTIVE or REFRESH-to-REFRESH time */
#define	REFRESH_TIMING_TRFC_BASE		16
#define	REFRESH_TIMING_TREFI_MSK		SHIFT0(0x3fff)	/* AUTO-REFRESH interval time */
#define	REFRESH_TIMING_TREFI_BASE		0

/*	SELFREFRESH_TIMING				0x0394	MCU DRAM Self-refresh Timing
 *											Register
 */
#define	SELFREFRESH_TIMING_TCKSRE_MSK		SHIFT28(0xf)	/* tck cycles before changing clock, after entering self-refresh */
#define	SELFREFRESH_TIMING_TCKSRE_BASE		28
#define	SELFREFRESH_TIMING_TXSNR_MSK		SHIFT16(0x7ff)	
#define	SELFREFRESH_TIMING_TXSNR_BASE		16
#define	SELFREFRESH_TIMING_TCKSRX_MSK		SHIFT12(0xf)	/* stable tck cycles before exiting self-refresh */
#define	SELFREFRESH_TIMING_TCKSRX_BASE		12
#define	SELFREFRESH_TIMING_TXSRD_MSK		SHIFT0(0x3ff)	
#define	SELFREFRESH_TIMING_TXSRD_BASE		0

/*	POWERDOWN_TIMING				0x0398	MCU DRAM Power-down Timing Register */
#define	POWERDOWN_TIMING_TPDEN_MSK			SHIFT28(0x3)	/* non-read/write command to power-down entry delay */
#define	POWERDOWN_TIMING_TPDEN_BASE			28
#define	POWERDOWN_TIMING_TCKESR_MSK			SHIFT16(0xf)	
#define	POWERDOWN_TIMING_TCKESR_BASE		16
#define	POWERDOWN_TIMING_TXP_MSK			SHIFT8(0xf)		
#define	POWERDOWN_TIMING_TXP_BASE			8
#define	POWERDOWN_TIMING_TXARDS_MSK			SHIFT0(0x1f)	
#define	POWERDOWN_TIMING_TXARDS_BASE		0

/*	MRS_TIMING						0x039C	MCU DRAM MRS Timing Register */
#define	MRS_TIMING_TMOD_MSK			SHIFT4(0x1f)	
#define	MRS_TIMING_TMOD_BASE		4
#define	MRS_TIMING_TMRD_MSK			SHIFT0(0xf)		/* Mode Register Set command cycle time */
#define	MRS_TIMING_TMRD_BASE		0

/*	ACT_TIMING						0x03A0	MCU DRAM Activate Timing Register */
#define	ACT_TIMING_TFAW_MSK			SHIFT24(0x3f)	
#define	ACT_TIMING_TFAW_BASE		24
#define	ACT_TIMING_TRC_MSK			SHIFT16(0x7f)	/* ACTIVE-to-ACTIVE or REFRESH (same bank) command delay */
#define	ACT_TIMING_TRC_BASE			16
#define	ACT_TIMING_TRCD_MSK			SHIFT8(0x1f)	/* RAS-to-CAS delay */
#define	ACT_TIMING_TRCD_BASE		8
#define	ACT_TIMING_TRAS_MSK			SHIFT0(0x3f)	/* ACTIVE-to-PRECHARGE command */
#define	ACT_TIMING_TRAS_BASE		0

/*	PRECHARGE_TIMING				0x03A4	MCU DRAM Precharge Timing Register */
#define	PRECHARGE_TIMING_TRPA_MSK		SHIFT20(0x1f)	/* PreCharge-all command period */
#define	PRECHARGE_TIMING_TRPA_BASE		20
#define	PRECHARGE_TIMING_TWR_MSK		SHIFT12(0x1f)	/* Write recovery (effective value in DRAM clock) */
#define	PRECHARGE_TIMING_TWR_BASE		12
#define	PRECHARGE_TIMING_TRTP_MSK		SHIFT8(0xf)		/* Internal READ-to-PRECHARGE command delay */
#define	PRECHARGE_TIMING_TRTP_BASE		8
#define	PRECHARGE_TIMING_TRP_MSK		SHIFT0(0x1f)	/* PreCharge command period */
#define	PRECHARGE_TIMING_TRP_BASE		0

/*	CAS_RAS_TIMING					0x03A8	MCU DRAM CAS/RAS Timing Register */
#define	CAS_RAS_TIMING_TRRD_MSK			SHIFT28(0xf)	/* ACTIVE bank A to ACTIVE bank B command periodm, in the same bank group */
#define	CAS_RAS_TIMING_TRRD_BASE		28
#define	CAS_RAS_TIMING_TCCD_MSK			SHIFT20(0x7)	/* CAS to CAS command delay, for accessing the same bank group */
#define	CAS_RAS_TIMING_TCCD_BASE		20
#define	CAS_RAS_TIMING_TWTR_MSK			SHIFT4(0xf)		/* Delay from start of internal write transaction to internal read command in the same bank group */
#define	CAS_RAS_TIMING_TWTR_BASE		4

/*	OFF_SPEC_TIMING					0x03AC	MCU DRAM Off-spec timing Register */
#define	OFF_SPEC_TIMING_READ_GAP_EXTEND_MSK				SHIFT16(0x7)	
#define	OFF_SPEC_TIMING_READ_GAP_EXTEND_BASE			16
#define	OFF_SPEC_TIMING_TWL_EARLY_MSK					SHIFT12(0x3)	
#define	OFF_SPEC_TIMING_TWL_EARLY_BASE					12
#define	OFF_SPEC_TIMING_TRWD_EXT_DLY_MSK				SHIFT8(0x7)		/* READ to WRITE command delay */
#define	OFF_SPEC_TIMING_TRWD_EXT_DLY_BASE				8
#define	OFF_SPEC_TIMING_TCCD_CCS_WR_EXT_DLY_MSK			SHIFT4(0x7)		/* Extra CAS to CAS delay when issuing two WRITE across different chip-selects */
#define	OFF_SPEC_TIMING_TCCD_CCS_WR_EXT_DLY_BASE		4
#define	OFF_SPEC_TIMING_TCCD_CCS_EXT_DLY_MSK			SHIFT0(0xf)		/* Extra CAS to CAS delay when issuing two READ across different chip-selects */
#define	OFF_SPEC_TIMING_TCCD_CCS_EXT_DLY_BASE			0

/*	DRAM_READ_TIMING				0x03B0	MCU DRAM read timing control
 *											register
 */
#define	DRAM_READ_TIMING_TDQSCK_MSK			SHIFT0(0x7)		/* tDQSCK */
#define	DRAM_READ_TIMING_TDQSCK_BASE		0

/*	DRAM_CA_TRAIN_TIMING			0x03B4	MCU DRAM CA Train timing Register */
#define	DRAM_CA_TRAIN_TIMING_TCAEXT_MSK			SHIFT8(0xf)		/* tCAEXT */
#define	DRAM_CA_TRAIN_TIMING_TCAEXT_BASE		8
#define	DRAM_CA_TRAIN_TIMING_TCACKEL_MSK		SHIFT0(0xf)		/* tCACKEL */
#define	DRAM_CA_TRAIN_TIMING_TCACKEL_BASE		0

/*	PHY_CONTROL_1					0x0400	MCU PHY Control Register 1 */
#define	PHY_CONTROL_1_PHY_RFIFO_RDRST_EXPAND_MSK		SHIFT17(0x3)	/* Extend the read FIFO reset duty cycle */
#define	PHY_CONTROL_1_PHY_RFIFO_RDRST_EXPAND_BASE		17
#define	PHY_CONTROL_1_PHY_RFIFO_RDRST_EARLY				BIT_15			
#define	PHY_CONTROL_1_PHY_RFIFO_RDRST_EN				BIT_14			
#define	PHY_CONTROL_1_DQ_EN_EXTEND						BIT_12			
#define	PHY_CONTROL_1_RD_EXT_DLY_MSK					SHIFT7(0x7)		/* Extra delay after reading data from PHY FIFO */
#define	PHY_CONTROL_1_RD_EXT_DLY_BASE					7
#define	PHY_CONTROL_1_PHY_RFIFO_RPTR_DLY_VAL_MSK		SHIFT4(0x7)		
#define	PHY_CONTROL_1_PHY_RFIFO_RPTR_DLY_VAL_BASE		4
#define	PHY_CONTROL_1_DQ_EXT_DLY_MSK					SHIFT0(0xf)		/* Read data round-trip off-chip delay */
#define	PHY_CONTROL_1_DQ_EXT_DLY_BASE					0

/*	PHY_CONTROL_2					0x0404	MCU PHY Control Register 2 */
#define	PHY_CONTROL_2_PHY_DQ_ZNR_MSB			BIT_31			/* DQ NMOS driver strength fine configuration MSB */
#define	PHY_CONTROL_2_PHY_DQ_ZPR_MSB			BIT_30			/* DQ PMOS driver strength fine configuration MSB */
#define	PHY_CONTROL_2_PHY_QS_VREF_SEL_MSK		SHIFT28(0x3)	/* DQS reference voltage selector */
#define	PHY_CONTROL_2_PHY_QS_VREF_SEL_BASE		28
#define	PHY_CONTROL_2_PHY_DQ_ZPDRV_MSK			SHIFT24(0xf)	/* DQ PMOS driver strength coarse configuration */
#define	PHY_CONTROL_2_PHY_DQ_ZPDRV_BASE			24
#define	PHY_CONTROL_2_PHY_DQ_ZNDRV_MSK			SHIFT20(0xf)	/* DQ NMOS driver strength coarse configuration */
#define	PHY_CONTROL_2_PHY_DQ_ZNDRV_BASE			20
#define	PHY_CONTROL_2_PHY_DQ_ZPTRM_MSK			SHIFT16(0xf)	/* DQ PMOS termination strength configuration */
#define	PHY_CONTROL_2_PHY_DQ_ZPTRM_BASE			16
#define	PHY_CONTROL_2_PHY_DQ_ZNTRM_MSK			SHIFT12(0xf)	/* DQ NMOS termination strength configuration */
#define	PHY_CONTROL_2_PHY_DQ_ZNTRM_BASE			12
#define	PHY_CONTROL_2_PHY_DQ_ZNR_MSK			SHIFT8(0xf)		/* DQ NMOS driver strength fine configuration */
#define	PHY_CONTROL_2_PHY_DQ_ZNR_BASE			8
#define	PHY_CONTROL_2_PHY_DQ_ZPR_MSK			SHIFT4(0xf)		/* DQ PMOS driver strength fine configuration */
#define	PHY_CONTROL_2_PHY_DQ_ZPR_BASE			4
#define	PHY_CONTROL_2_PHY_DQ_VREF_SEL_MSK		SHIFT2(0x3)		/* DQ reference voltage selector */
#define	PHY_CONTROL_2_PHY_DQ_VREF_SEL_BASE		2
#define	PHY_CONTROL_2_PHY_DQ_ZD					BIT_1			/* DQ/DQS driver strength fine configuration enable */
#define	PHY_CONTROL_2_PHY_DQ_MODE				BIT_0			

/*	PHY_CONTROL_3					0x0408	MCU PHY Control Register 3 */
#define	PHY_CONTROL_3_PHY_ADCM_ZNR_MSB				BIT_31			/* Address/Command NMOS driver strength fine configuration MSB */
#define	PHY_CONTROL_3_PHY_ADCM_ZPR_MSB				BIT_30			/* Address/Command PMOS driver strength fine configuration MSB */
#define	PHY_CONTROL_3_PHY_ADCM_ZPDRV_MSK			SHIFT24(0xf)	/* Address/Command PMOS driver strength coarse configuration */
#define	PHY_CONTROL_3_PHY_ADCM_ZPDRV_BASE			24
#define	PHY_CONTROL_3_PHY_ADCM_ZNDRV_MSK			SHIFT20(0xf)	/* Address/Command NMOS driver strength coarse configuration */
#define	PHY_CONTROL_3_PHY_ADCM_ZNDRV_BASE			20
#define	PHY_CONTROL_3_PHY_ADCM_ZPTRM_MSK			SHIFT16(0xf)	/* Address/Command PMOS termination strength configuration */
#define	PHY_CONTROL_3_PHY_ADCM_ZPTRM_BASE			16
#define	PHY_CONTROL_3_PHY_ADCM_ZNTRM_MSK			SHIFT12(0xf)	/* Address/Command NMOS termination strength configuration */
#define	PHY_CONTROL_3_PHY_ADCM_ZNTRM_BASE			12
#define	PHY_CONTROL_3_PHY_ADCM_ZNR_MSK				SHIFT8(0xf)		/* Address/Command NMOS driver strength fine configuration */
#define	PHY_CONTROL_3_PHY_ADCM_ZNR_BASE				8
#define	PHY_CONTROL_3_PHY_ADCM_ZPR_MSK				SHIFT4(0xf)		/* Address/Command PMOS driver strength fine configuration */
#define	PHY_CONTROL_3_PHY_ADCM_ZPR_BASE				4
#define	PHY_CONTROL_3_PHY_ADCM_VREF_SEL_MSK			SHIFT2(0x3)		/* Address/Command reference voltage selector */
#define	PHY_CONTROL_3_PHY_ADCM_VREF_SEL_BASE		2
#define	PHY_CONTROL_3_PHY_ADCM_ZD					BIT_1			/* Address/Command driver strength fine configuration enable */
#define	PHY_CONTROL_3_PHY_ADCM_MODE					BIT_0			

/*	PHY_CONTROL_4					0x040C	MCU PHY Control Register 4 */
#define	PHY_CONTROL_4_PHY_QS_RCVTYPE_MSK		SHIFT30(0x3)	
#define	PHY_CONTROL_4_PHY_QS_RCVTYPE_BASE		30
#define	PHY_CONTROL_4_PHY_DQ_RCVEP_MSK			SHIFT27(0x7)	/* Data receiver gain settings for Ppair */
#define	PHY_CONTROL_4_PHY_DQ_RCVEP_BASE			27
#define	PHY_CONTROL_4_PHY_DQ_RCVEN_MSK			SHIFT24(0x7)	/* Data receiver gain settings for Npair */
#define	PHY_CONTROL_4_PHY_DQ_RCVEN_BASE			24
#define	PHY_CONTROL_4_PHY_DQ_RCVTYPE_MSK		SHIFT22(0x3)	
#define	PHY_CONTROL_4_PHY_DQ_RCVTYPE_BASE		22
#define	PHY_CONTROL_4_PHY_CK_ZD					BIT_21			/* Clock driver strength fine configuration enable */
#define	PHY_CONTROL_4_PHY_CK_ZPR_MSB			BIT_9			/* Clock PMOS driver strength fine configuration MSB */
#define	PHY_CONTROL_4_PHY_CK_ZNR_MSB			BIT_8			/* Clock NMOS driver strength fine configuration MSB */
#define	PHY_CONTROL_4_PHY_CK_ZNR_MSK			SHIFT4(0xf)		/* Clock NMOS driver strength fine configuration */
#define	PHY_CONTROL_4_PHY_CK_ZNR_BASE			4
#define	PHY_CONTROL_4_PHY_CK_ZPR_MSK			SHIFT0(0xf)		/* Clock PMOS driver strength fine configuration */
#define	PHY_CONTROL_4_PHY_CK_ZPR_BASE			0

/*	PHY_CONTROL_5					0x0410	MCU PHY Control Register 5 */
#define	PHY_CONTROL_5_PAD_CAL_INTERVAL_MSK			SHIFT20(0x3)	
#define	PHY_CONTROL_5_PAD_CAL_INTERVAL_BASE			20
#define	PHY_CONTROL_5_PAD_CAL_AUTO_SEL_MSK			SHIFT17(0x7)	
#define	PHY_CONTROL_5_PAD_CAL_AUTO_SEL_BASE			17
#define	PHY_CONTROL_5_PAD_CAL_AUTO					BIT_16			
#define	PHY_CONTROL_5_PAD_CAL_ONCE					BIT_15			
#define	PHY_CONTROL_5_READ_FIFO_DEPTH_MSK			SHIFT12(0x3)	
#define	PHY_CONTROL_5_READ_FIFO_DEPTH_BASE			12
#define	PHY_CONTROL_5_WRITE_DQSB_ONE				BIT_10			
#define	PHY_CONTROL_5_WRITE_DQSB_EN					BIT_8			
#define	PHY_CONTROL_5_ENABLE_ALL_BYTE_PD			BIT_7			
#define	PHY_CONTROL_5_ENABLE_ALL_BYTE_OE			BIT_6			
#define	PHY_CONTROL_5_MC_QSN_PD						BIT_4			
#define	PHY_CONTROL_5_MC_QSP_PD						BIT_3			
#define	PHY_CONTROL_5_MC_DQ_PD						BIT_2			
#define	PHY_CONTROL_5_MC_CK_PD						BIT_1			
#define	PHY_CONTROL_5_MC_AC_PD						BIT_0			

/*	PHY_CONTROL_6					0x0414	MCU PHY Control Register 6 */
#define	PHY_CONTROL_6_MC_PHY_WFIFO_LD_PHASE		BIT_9	
#define	PHY_CONTROL_6_MC_PHY_SYNC_MODE			BIT_3	/* Memory Controller/PHY clock alignment (when using external 2x clock) */

/*	PHY_CONTROL_8					0x041C	MCU PHY Control Register 8 */
#define	PHY_CONTROL_8_DLL_RESET_TIMER_MSK				SHIFT24(0xff)	/* PHY DLL locking period */
#define	PHY_CONTROL_8_DLL_RESET_TIMER_BASE				24
#define	PHY_CONTROL_8_DLL_UPDATE_TIMER_MSK				SHIFT16(0x1f)	/* PHY DLL update period */
#define	PHY_CONTROL_8_DLL_UPDATE_TIMER_BASE				16
#define	PHY_CONTROL_8_DLL_AUTO_UPDATE_INTERVAL_MSK		SHIFT8(0xff)	/* Auto update DLL interval */
#define	PHY_CONTROL_8_DLL_AUTO_UPDATE_INTERVAL_BASE		8
#define	PHY_CONTROL_8_DLL_AUTO_MANUAL_UPDATE			BIT_3			
#define	PHY_CONTROL_8_DLL_AUTO_UPDATE_EN				BIT_2			
#define	PHY_CONTROL_8_DLL_UPDATE_BY_REF_EN				BIT_0			

/*	PHY_CONTROL_9					0x0420	MCU PHY Control Register 9 */
#define	PHY_CONTROL_9_PHY_SYNC_EN					BIT_31			
#define	PHY_CONTROL_9_DLL_UPDATE_EN_PULSE			BIT_30			
#define	PHY_CONTROL_9_PHY_DLL_RST					BIT_29			
#define	PHY_CONTROL_9_PHY_PLL_RST					BIT_28			
#define	PHY_CONTROL_9_PHY_CAL_ZPR_MSK				SHIFT20(0x1f)	/* Auto-calibration PMOS driver strength fine configuration result */
#define	PHY_CONTROL_9_PHY_CAL_ZPR_BASE				20
#define	PHY_CONTROL_9_PHY_CAL_ZNR_MSK				SHIFT15(0x1f)	/* Auto-calibration NMOS driver strength fine configuration result */
#define	PHY_CONTROL_9_PHY_CAL_ZNR_BASE				15
#define	PHY_CONTROL_9_PHY_CAL_ERR					BIT_3			/* PHY pad calibration error */
#define	PHY_CONTROL_9_PHY_CAL_DONE					BIT_2			/* PHY pad calibration done */

/*	PHY_CONTROL_10					0x0424	MCU PHY Control Register 10 */
#define	PHY_CONTROL_10_PHY_WL_DQS_PULSE				BIT_31			
#define	PHY_CONTROL_10_PHY_WL_DQ_OUT_MSK			SHIFT0(0x1ff)	
#define	PHY_CONTROL_10_PHY_WL_DQ_OUT_BASE			0

/*	PHY_CONTROL_11					0x0428	MCU PHY Control Register 11 */
#define	PHY_CONTROL_11_PHY_READ_GAP_RESET_CYCLE_MSK			SHIFT4(0x7)		
#define	PHY_CONTROL_11_PHY_READ_GAP_RESET_CYCLE_BASE		4
#define	PHY_CONTROL_11_PHY_READ_GAP_RESET_EN				BIT_0			

/*	PHY_CONTROL_12					0x042C	MCU PHY Control Register 12 */
#define	PHY_CONTROL_12_RESERVE_CK_MSK		SHIFT24(0xff)	/* Reserved pins for clock */
#define	PHY_CONTROL_12_RESERVE_CK_BASE		24
#define	PHY_CONTROL_12_RESERVE_AC2_MSK		SHIFT16(0xff)	/* Reserved pins for ADCM SUBPHY 2 */
#define	PHY_CONTROL_12_RESERVE_AC2_BASE		16
#define	PHY_CONTROL_12_RESERVE_AC1_MSK		SHIFT8(0xff)	/* Reserved pins for ADCM SUBPHY 1 */
#define	PHY_CONTROL_12_RESERVE_AC1_BASE		8
#define	PHY_CONTROL_12_RESERVE_AC0_MSK		SHIFT0(0xff)	/* Reserved pins for ADCM SUBPHY 0 */
#define	PHY_CONTROL_12_RESERVE_AC0_BASE		0

/*	PHY_CONTROL_13					0x0430	MCU PHY Control Register 13 */
#define	PHY_CONTROL_13_PHY_BA_PWRDWN_MSK		SHIFT20(0x7)		
#define	PHY_CONTROL_13_PHY_BA_PWRDWN_BASE		20
#define	PHY_CONTROL_13_PHY_AD_PWRDWN_MSK		SHIFT0(0x3ffff)		
#define	PHY_CONTROL_13_PHY_AD_PWRDWN_BASE		0

/*	PHY_CONTROL_14					0x0434	MCU PHY Control Register 14 */
#define	PHY_CONTROL_14_PHY_RESETN_PWRDWN			BIT_19			
#define	PHY_CONTROL_14_PHY_WEN_PWRDWN				BIT_18			
#define	PHY_CONTROL_14_PHY_CASN_PWRDWN				BIT_17			
#define	PHY_CONTROL_14_PHY_RASN_PWRDWN				BIT_16			
#define	PHY_CONTROL_14_PHY_ODT_PWRDWN_MSK			SHIFT12(0xf)	
#define	PHY_CONTROL_14_PHY_ODT_PWRDWN_BASE			12
#define	PHY_CONTROL_14_PHY_CKE_PWRDWN_MSK			SHIFT8(0xf)		
#define	PHY_CONTROL_14_PHY_CKE_PWRDWN_BASE			8
#define	PHY_CONTROL_14_PHY_CSN_PWRDWN_MSK			SHIFT4(0xf)		
#define	PHY_CONTROL_14_PHY_CSN_PWRDWN_BASE			4
#define	PHY_CONTROL_14_PHY_CK_PWRDWN_MSK			SHIFT0(0xf)		
#define	PHY_CONTROL_14_PHY_CK_PWRDWN_BASE			0

/*	PHY_CONTROL_15					0x0438	MCU PHY Control Register 15 */
#define	PHY_CONTROL_15_PHY_WRST_SEL_MSK			SHIFT0(0x3)		
#define	PHY_CONTROL_15_PHY_WRST_SEL_BASE		0

/*	PHY_DLL_CONTROL					0x0500	MCU PHY DLL Control Register */
#define	PHY_DLL_CONTROL_DLL_PHSEL1_MSK			SHIFT24(0x3f)	/* Adjust the DLL phase delay of the negative edge */
#define	PHY_DLL_CONTROL_DLL_PHSEL1_BASE			24
#define	PHY_DLL_CONTROL_DLL_PHSEL_MSK			SHIFT16(0x3f)	/* Adjust the DLL phase delay */
#define	PHY_DLL_CONTROL_DLL_PHSEL_BASE			16
#define	PHY_DLL_CONTROL_DLL_DELAY_TEST_MSK		SHIFT4(0x3ff)	/* Tap delay value for the slave delay chain */
#define	PHY_DLL_CONTROL_DLL_DELAY_TEST_BASE		4
#define	PHY_DLL_CONTROL_DLL_GAIN2X				BIT_3			/* Gain2x */
#define	PHY_DLL_CONTROL_DLL_TEST_EN				BIT_1			/* DLL test mode enable */
#define	PHY_DLL_CONTROL_DLL_BYPASS_EN			BIT_0			

/*	PHY_DLL_BYTE_SELECT				0x0528	MCU PHY DLL Byte Select Register */
#define	PHY_DLL_BYTE_SELECT_DLL_BYTE_SEL_MSK		SHIFT0(0xf)		/* DLL byte select */
#define	PHY_DLL_BYTE_SELECT_DLL_BYTE_SEL_BASE		0

/*	PHY_DLL_DLY						0x052C	MCU PHY BYTE DLL Delay Register */
#define	PHY_DLL_DLY_DLL_SLAVE_DELAY_OUT_MSK			SHIFT16(0x3ff)	/* Slave DLL delay value */
#define	PHY_DLL_DLY_DLL_SLAVE_DELAY_OUT_BASE		16
#define	PHY_DLL_DLY_DLL_MASTER_DELAY_OUT_MSK		SHIFT0(0x3ff)	/* Master DLL delay value */
#define	PHY_DLL_DLY_DLL_MASTER_DELAY_OUT_BASE		0

/*	PHY_DATA_BYTE_CONTROL			0x0540	MCU PHY Data Byte Control Register */
#define	PHY_DATA_BYTE_CONTROL_PHY_DQ_PWRDWN				BIT_10			
#define	PHY_DATA_BYTE_CONTROL_PHY_DM_PWRDWN				BIT_9			
#define	PHY_DATA_BYTE_CONTROL_PHY_DQS_PWRDWN			BIT_8			
#define	PHY_DATA_BYTE_CONTROL_PHY_DQ_RESERVE_MSK		SHIFT0(0xff)	/* Reserve bits for data SUBPHY */
#define	PHY_DATA_BYTE_CONTROL_PHY_DQ_RESERVE_BASE		0

/*	PHY_WL_RL_CONTROL				0x0570	MCU PHY WL RL Control Register */
#define	PHY_WL_RL_CONTROL_PHY_WL_CS_SEL_MSK				SHIFT8(0xf)		
#define	PHY_WL_RL_CONTROL_PHY_WL_CS_SEL_BASE			8
#define	PHY_WL_RL_CONTROL_PHY_WL_DQS_RECEN_DIS			BIT_4			
#define	PHY_WL_RL_CONTROL_PHY_RL_ENABLE_MSK				SHIFT0(0x3)		
#define	PHY_WL_RL_CONTROL_PHY_RL_ENABLE_BASE			0

/*	PHY_WL_DATA_CONTROL				0x0580	MCU PHY WL Data Control Register */
#define	PHY_WL_DATA_CONTROL_PHY_WL_WCK_QS_DLY_MSK		SHIFT8(0x7f)	/* Delay control for the DQS of this byte */
#define	PHY_WL_DATA_CONTROL_PHY_WL_WCK_QS_DLY_BASE		8
#define	PHY_WL_DATA_CONTROL_PHY_WL_WCK_DQ_DLY_MSK		SHIFT0(0x7f)	/* Delay control for the DQ/DQM of this byte */
#define	PHY_WL_DATA_CONTROL_PHY_WL_WCK_DQ_DLY_BASE		0

/*	PHY_WL_CLK_CONTROL				0x0610	MCU PHY WL CLK Control Register */
#define	PHY_WL_CLK_CONTROL_PHY_WL_WCK_CK_DLY_MSK		SHIFT0(0x1f)	/* Delay control for each clock of this byte */
#define	PHY_WL_CLK_CONTROL_PHY_WL_WCK_CK_DLY_BASE		0

/*	PHY_WL_AC_CONTROL				0x0620	MCU PHY WL AC Control Register */
#define	PHY_WL_AC_CONTROL_PHY_WL_WCK_AC_DLY_MSK			SHIFT0(0x1f)	
#define	PHY_WL_AC_CONTROL_PHY_WL_WCK_AC_DLY_BASE		0

/*	PHY_RL_CONTROL					0x0640	MCU PHY RL Control Register */
#define	PHY_RL_CONTROL_PHY_RL_CYCLE_DLY_MSK			SHIFT8(0xf)		
#define	PHY_RL_CONTROL_PHY_RL_CYCLE_DLY_BASE		8
#define	PHY_RL_CONTROL_PHY_RL_TAP_DLY_MSK			SHIFT0(0xff)	
#define	PHY_RL_CONTROL_PHY_RL_TAP_DLY_BASE			0

/*	PHY_CA_DELAY0					0x0700	MCU PHY CA Delay Register 0 */
#define	PHY_CA_DELAY0_CA3_DELAY_MSK			SHIFT24(0xf)	/* CA3 delay */
#define	PHY_CA_DELAY0_CA3_DELAY_BASE		24
#define	PHY_CA_DELAY0_CA2_DELAY_MSK			SHIFT16(0xf)	/* CA2 delay */
#define	PHY_CA_DELAY0_CA2_DELAY_BASE		16
#define	PHY_CA_DELAY0_CA1_DELAY_MSK			SHIFT8(0xf)		/* CA1 delay */
#define	PHY_CA_DELAY0_CA1_DELAY_BASE		8
#define	PHY_CA_DELAY0_CA0_DELAY_MSK			SHIFT0(0xf)		/* CA0 delay */
#define	PHY_CA_DELAY0_CA0_DELAY_BASE		0

/*	PHY_CA_DELAY1					0x0704	MCU PHY CA Delay Register 1 */
#define	PHY_CA_DELAY1_CA8_DELAY_MSK			SHIFT24(0xf)	/* CA8 delay */
#define	PHY_CA_DELAY1_CA8_DELAY_BASE		24
#define	PHY_CA_DELAY1_CA7_DELAY_MSK			SHIFT16(0xf)	/* CA7 delay */
#define	PHY_CA_DELAY1_CA7_DELAY_BASE		16
#define	PHY_CA_DELAY1_CA6_DELAY_MSK			SHIFT8(0xf)		/* CA6 delay */
#define	PHY_CA_DELAY1_CA6_DELAY_BASE		8
#define	PHY_CA_DELAY1_CA5_DELAY_MSK			SHIFT0(0xf)		/* CA5 delay */
#define	PHY_CA_DELAY1_CA5_DELAY_BASE		0

/*	PHY_CA_DELAY2					0x0708	MCU PHY CA Delay Register 2 */
#define	PHY_CA_DELAY2_CA9_DELAY_MSK			SHIFT8(0xf)		/* CA9 delay */
#define	PHY_CA_DELAY2_CA9_DELAY_BASE		8
#define	PHY_CA_DELAY2_CA4_DELAY_MSK			SHIFT0(0xf)		/* CA4 delay */
#define	PHY_CA_DELAY2_CA4_DELAY_BASE		0

/*	PHY_CA_TRAIN_RESULT				0x0740	MCU PHY CA Train Result */
#define	PHY_CA_TRAIN_RESULT_CA_TRAIN_RESULT_MSK			SHIFT0(0xffff)	/* CA Train Result */
#define	PHY_CA_TRAIN_RESULT_CA_TRAIN_RESULT_BASE		0



/* -------------------- */


#endif	/* __INC_MCU_H */
