#ifndef __HSI_H__
#define __HSI_H__


typedef struct
{
  __IO uint32_t  TX_FIFO;
  __IO uint32_t  RESERVED00;

}TX_REG;

typedef struct
{
  __IO uint32_t  RX_FIFO;
  __IO uint32_t  RESERVED11;

}RX_REG;

typedef struct
{
 ENABLE[4];//0X000-0X00c OFFSET
    __IO uint32_t CNTRL;   //0x010 OFFSET
    __IO uint32_t CONFIG1;   //0x014 OFFSET
    __IO uint32_t CONFIG2;   //0x018 OFFSET
    __IO uint32_t BRK_CONFIG;   //0x01C OFFSET
    __IO uint32_t BURST_CONFIG;   //0x020 OFFSET
    __IO uint32_t FTO_CONFIG;   //0x024 OFFSET
    __IO uint32_t RTBC_CONFIG;   //0x028 OFFSET
    __IO uint32_t RIPC;   //0x02C OFFSET
    __IO uint32_t RESERVED0[(0x40-0x2C)/4-1];
    __IO uint32_t TLTC_CONFIG[16];   //0x040-7C OFFSET

    __IO uint32_t RX_FIFO_CONFIG[16];   //0x080 -0x0BC  OFFSET
    __IO uint32_t TX_FIFO_CONFIG[16];   //0x0C0-0x0fc OFFSET
    __IO uint32_t IPC_DATA[16];   //0x100-0X13C OFFSET
    __IO uint32_t IPC_DATA_MASK[16];   //0x140-0x17C OFFSET
    __IO uint32_t CHNL_FIFO_STATUS[16];   //0x180-0x1BC OFFSET
    __IO uint32_t RESERVED1[(0x200-0x1BC)/4-1];
    __IO uint32_t CHNL_STATUS[16];   //0x200-0x23C OFFSET
    __IO uint32_t CHNL_INT_MASK[16];   //0x240-0X27C OFFSET
    __IO uint32_t CHNL_INT_STATUS[16];   //0x280-0X2BC OFFSET
    __IO uint32_t RESERVED2[(0x200-0x1BC)/4-1];
    __IO uint32_t INT_MASK[4];   //0x0300-0X30C OFFSET
    __IO uint32_t INT_STATUS[4];   //0x310-0X31C OFFSET
    __IO uint32_t RESERVED3[(0x400-0x31C)/4-1];
    __IO uint32_t RX_DMA_NDPTR[16];   //0x400-0x43C OFFSET
    __IO uint32_t RX_DMA_DADR[16];   //0x440-0x47C OFFSET
    __IO uint32_t RX_DMA_DLEN[16];   //0x480-0x4BC OFFSET
    __IO uint32_t RX_DMA_CTRL[16];   //0x4C0-0x4FC OFFSET
    __IO uint32_t TX_DMA_NDPTR[16];   //0x500-0x53C OFFSET
    __IO uint32_t TX_DMA_SADR[16];   //0x540-0x57C OFFSET
    __IO uint32_t TX_TX_DMA_DLEN[16];   //0x580-0x5BC OFFSET
    __IO uint32_t TX_DMA_CTRL[16];   //0x5C0-0x5FC OFFSET

    __IO uint32_t DMA_ARB_MODE;   //0x600 OFFSET
    __IO uint32_t RESERVED4[(0xA00-0x600)/4-1];
    __IO TX_REG TX_FIFO[16];   //0xA00 OFFSET
    __IO uint32_t RESERVED5[(0xB00-0xA78)/4-1];
    __IO RX_REG RX_FIFO[16];   //0xB00 OFFSET
 



}HSI_TypeDef;

#define    HSI_BASE     (0xD4290000)       //DON'T Write in xml.


#define    HSI  (( HSI_TypeDef *) HSI_BASE )


//HSI Enable Register
#define  ENABLE_HSI_ENABLE  BIT_0
#define  ENABLE_RX_PAUSE  BIT_4
#define  ENABLE_TX_PAUSE  BIT_5


//HSI Control Register
#define CNTRL_RCVR_MODE   BIT_0
#define CNTRL_RX_WRM_RST   BIT_1
#define CNTRL_RX_BIT_RST   BIT_2
#define CNTRL_TX_WRM_RST   BIT_3
#define CNTRL_TX_BIT_RST   BIT_4
#define CNTRL_HSI_IPC_EN   BIT_8
#define CNTRL_HSI_RIPC_EN   BIT_16
#define CNTRL_IPC_CMD_ID_MSK  SHIFT12(0xf)
#define CNTRL_IPC_CMD_ID_BASE   12


//HSI Configuration Register 1
#define CONFIG1_RX_WAKE_IMPL      BIT_0
#define CONFIG1_TX_WAKE_IMPL      BIT_1
#define CONFIG1_READY_MODE      BIT_2
#define CONFIG1_TRAN_MODE      BIT_8
#define CONFIG1_TX_ARB_MODE_MSK  SHIFT4(0x3)
#define CONFIG1_TX_ARB_MODE_BASE    4
#define CONFIG1_DATA_FLOW_MSK  SHIFT10(0x3)
#define CONFIG1_DATA_FLOW_BASE    10
#define CONFIG1_NUMB_CHAN_MSK  SHIFT16(0x7)
#define CONFIG1_NUMB_CHAN_BASE    16
#define CONFIG1_TLTC_TO_PRE_MSK  SHIFT24(0xff)
#define CONFIG1_TLTC_TO_PRE_BASE    24


//Break Configuration Register
#define BRK_CONFIG_TX_BREAK  BIT_16
#define BRK_CONFIG_BRK_FIFO_CLR  BIT_17
#define BRK_CONFIG_BRK_RCVR_CLR  BIT_18
#define BRK_CONFIG_BRK_CNT_MSK   SHIFT0(0x3f)
#define BRK_CONFIG_BRK_CNT_BASE       0



//TLTC Configuration Register
#define TLTC_CONFIG_TLTC_EN        BIT_0
#define TLTC_CONFIG_TLTC_MODE        BIT_1
#define TLTC_CONFIG_TLTC_COUNT_MSK  SHIFT16(0xffff)
#define TLTC_CONFIG_TLTC_COUNT_BASE   16

//Receiver FIFO Configuration Register
#define RX_FIFO_CONFIG_FIFO_EN  BIT_0
#define RX_FIFO_CONFIG_REQ_EN  BIT_1
#define RX_FIFO_CONFIG_REQ_SEL  BIT_2
#define RX_FIFO_CONFIG_SAFETY_VALVE_EN  BIT_3
#define RX_FIFO_CONFIG_FIFO_SIZE_MSK   SHIFT12(0x3f)
#define RX_FIFO_CONFIG_FIFO_SIZE_BASE   12
#define RX_FIFO_CONFIG_FIFO_THRS_MSK   SHIFT18(0x3f)
#define RX_FIFO_CONFIG_FIFO_THRS_BASE   18
#define RX_FIFO_CONFIG_FIFO_BASE_MSK   SHIFT12(0x3f)
#define RX_FIFO_CONFIG_FIFO_BASE_BASE   12



//Transmitter FIFO Configuration Register
#define TX_FIFO_CONFIG_FIFO_EN  BIT_0
#define TX_FIFO_CONFIG_REQ_EN  BIT_1
#define TX_FIFO_CONFIG_REQ_SEL  BIT_2
#define TX_FIFO_CONFIG_CHNL_PRIORITY_MSK SHIFT3(0x3)
#define TX_FIFO_CONFIG_CHNL_PRIORITY_BASE   3
#define TX_FIFO_CONFIG_CHNL_WEIGHT_MSK SHIFT5(0x7f)
#define TX_FIFO_CONFIG_CHNL_WEIGHT_BASE   5

#define TX_FIFO_CONFIG_FIFO_SIZE_MSK   SHIFT12(0x3f)
#define TX_FIFO_CONFIG_FIFO_SIZE_BASE   12
#define TX_FIFO_CONFIG_FIFO_THRS_MSK   SHIFT18(0x3f)
#define TX_FIFO_CONFIG_FIFO_THRS_BASE   18
#define TX_FIFO_CONFIG_FIFO_BASE_MSK   SHIFT12(0x3f)
#define TX_FIFO_CONFIG_FIFO_BASE_BASE   12

//Channel Status Register
#define CHNL_STATUS_TX_FIFO_EMPTY     BIT_0
#define CHNL_STATUS_TX_FIFO_THRS     BIT_1
#define CHNL_STATUS_TX_FIFO_FULL     BIT_2
#define CHNL_STATUS_TX_FRM_LOST     BIT_3
#define CHNL_STATUS_TX_FIFO_OVER     BIT_4
#define CHNL_STATUS_TX_DMA_DONE     BIT_5
#define CHNL_STATUS_TX_DMA_ERR     BIT_6
#define CHNL_STATUS_RX_FIFO_NOT_EMPTY     BIT_7
#define CHNL_STATUS_RX_FIFO_EMPTY     BIT_8
#define CHNL_STATUS_RX_FIFO_THRS    BIT_9
#define CHNL_STATUS_RX_FIFO_FULL     BIT_10
#define CHNL_STATUS_RX_FRM_LOST     BIT_11
#define CHNL_STATUS_RX_FIFO_UNDER     BIT_12
#define CHNL_STATUS_RX_DMA_DONE     BIT_13
#define CHNL_STATUS_RX_DMA_ERR     BIT_14
#define CHNL_STATUS_TLTC_EXPIRED     BIT_16
#define CHNL_STATUS_TX_FIFO_EN     BIT_17
#define CHNL_STATUS_RX_FIFO_EN     BIT_18
#define CHNL_STATUS_HSI_IPC_CMD_RCVD     BIT_20
#define CHNL_STATUS_HSI_IPC_DATA_INT     BIT_21
#define CHNL_STATUS_HSI_IPC_IRQ_MSK   SHIFT_24(0xff)
#define CHNL_STATUS_HSI_IPC_IRQ_BASE   24



//Channel Interrupt Mask Register
#define CHNL_INT_MASK_TX_FIFO_EMPTY_MASK     BIT_0
#define CHNL_INT_MASK_TX_FIFO_THRS_MASK     BIT_1
#define CHNL_INT_MASK_TX_FIFO_FULL_MASK     BIT_2
#define CHNL_INT_MASK_TX_FRM_LOST_MASK     BIT_3
#define CHNL_INT_MASK_TX_FIFO_OVER_MASK     BIT_4
#define CHNL_INT_MASK_TX_DMA_DONE_MASK     BIT_5
#define CHNL_INT_MASK_TX_DMA_ERR_MASK     BIT_6
#define CHNL_INT_MASK_RX_FIFO_NOT_EMPTY_MASK     BIT_7
#define CHNL_INT_MASK_RX_FIFO_EMPTY_MASK     BIT_8
#define CHNL_INT_MASK_RX_FIFO_THRS_MASK    BIT_9
#define CHNL_INT_MASK_RX_FIFO_FULL_MASK     BIT_10
#define CHNL_INT_MASK_RX_FRM_LOST_MASK     BIT_11
#define CHNL_INT_MASK_RX_FIFO_UNDER_MASK     BIT_12
#define CHNL_INT_MASK_RX_DMA_DONE_MASK     BIT_13
#define CHNL_INT_MASK_RX_DMA_ERR_MASK     BIT_14
#define CHNL_INT_MASK_TLTC_EXPIRED_MASK     BIT_16
#define CHNL_INT_MASK_TX_FIFO_EN_MASK     BIT_17
#define CHNL_INT_MASK_RX_FIFO_EN_MASK     BIT_18
#define CHNL_INT_MASK_HSI_IPC_CMD_RCVD_MASK     BIT_20
#define CHNL_INT_MASK_HSI_IPC_DATA_INT_MASK     BIT_21
#define CHNL_INT_MASK_HSI_IPC_IRQ_MASK_MSK   SHIFT_24(0xff)
#define CHNL_INT_MASK_HSI_IPC_IRQ_MASK_BASE   24



//Channel Interrupt Mask Register
#define CHNL_INT_STATU_TX_FIFO_EMPTY    BIT_0
#define CHNL_INT_STATU_TX_FIFO_THRS     BIT_1
#define CHNL_INT_STATU_TX_FIFO_FULL     BIT_2
#define CHNL_INT_STATU_TX_FRM_LOST     BIT_3
#define CHNL_INT_STATU_TX_FIFO_OVER     BIT_4
#define CHNL_INT_STATU_TX_DMA_DONE     BIT_5
#define CHNL_INT_STATU_TX_DMA_ERR     BIT_6
#define CHNL_INT_STATU_RX_FIFO_NOT_EMPTY     BIT_7
#define CHNL_INT_STATU_RX_FIFO_EMPTY     BIT_8
#define CHNL_INT_STATU_RX_FIFO_THRS    BIT_9
#define CHNL_INT_STATU_RX_FIFO_FULL     BIT_10
#define CHNL_INT_STATU_RX_FRM_LOST     BIT_11
#define CHNL_INT_STATU_RX_FIFO_UNDER     BIT_12
#define CHNL_INT_STATU_RX_DMA_DONE     BIT_13
#define CHNL_INT_STATU_RX_DMA_ERR     BIT_14
#define CHNL_INT_STATU_TLTC_EXPIRED     BIT_16
#define CHNL_INT_STATU_TX_FIFO_EN     BIT_17
#define CHNL_INT_STATU_RX_FIFO_EN     BIT_18
#define CHNL_INT_STATU_HSI_IPC_CMD_RCVD     BIT_20
#define CHNL_INT_STATU_HSI_IPC_DATA_INT     BIT_21
#define CHNL_INT_STATU_HSI_IPC_IRQ_MSK   SHIFT_24(0xff)
#define CHNL_INT_STATU_HSI_IPC_IRQ_BASE   24


//HSI Interrupt Mask Register
#define INT_MASK_BRK_INT_MASK         BIT_0
#define INT_MASK_FTO_INT_MASK         BIT_1
#define INT_MASK_ERR_INT_MASK         BIT_2
#define INT_MASK_RTBC_INT_MASK         BIT_3
#define INT_MASK_CA_WAKE_MASK         BIT_4
#define INT_MASK_RIPC_INT_MASK         BIT_8

#define INT_MASK_CHNL_INT_MASK_MSK     SHIFT16(0xffff)
#define INT_MASK_CHNL_INT_MASK_BASE    16

//HSI Interrupt Status Register
#define INT_STATUS_BRK_RCVD         BIT_0
#define INT_STATUS_FTO_EXPIRED         BIT_1
#define INT_STATUS_RCVR_ERR         BIT_2
#define INT_STATUS_RTBC_INT         BIT_3
#define INT_STATUS_CA_WAKE         BIT_4
#define INT_STATUS_RIPC_FREE_INT         BIT_8

#define INT_STATUS_CHNL_INT_MSK     SHIFT16(0xffff)
#define INT_STATUS_CHNL_INT_BASE    16



//Rx DMA Control Register
#define RX_DMA_CTRL_INC_MODE   BIT_0
#define RX_DMA_CTRL_CHNL_MODE   BIT_16
#define RX_DMA_CTRL_INTR_MODE   BIT_17
#define RX_DMA_CTRL_CHNL_ENABLE   BIT_24
#define RX_DMA_CTRL_CLOSE_DESC   BIT_25
#define RX_DMA_CTRL_FORCE_FETCH   BIT_27
#define RX_DMA_CTRL_CHNL_PAUSE   BIT_28
#define RX_DMA_CTRL_CHNL_ABORT   BIT_29
#define RX_DMA_CTRL_CHNL_ACTIVE   BIT_30
#define RX_DMA_CTRL_PAUSE_STATUS   BIT_31
#define RX_DMA_CTRL_BURST_MAX_MSK    SHIFT8(0x7)
#define RX_DMA_CTRL_BURST_MAX_BASE    8



//Tx DMA Control Register
#define TX_DMA_CTRL_INC_MODE   BIT_0
#define TX_DMA_CTRL_CHNL_MODE   BIT_16
#define TX_DMA_CTRL_INTR_MODE   BIT_17
#define TX_DMA_CTRL_CHNL_ENABLE   BIT_24
#define TX_DMA_CTRL_CLOSE_DESC   BIT_25
#define TX_DMA_CTRL_FORCE_FETCH   BIT_27
#define TX_DMA_CTRL_CHNL_PAUSE   BIT_28
#define TX_DMA_CTRL_CHNL_ABORT   BIT_29
#define TX_DMA_CTRL_CHNL_ACTIVE   BIT_30
#define TX_DMA_CTRL_PAUSE_STATUS   BIT_31
#define TX_DMA_CTRL_BURST_MAX_MSK    SHIFT8(0x7)
#define TX_DMA_CTRL_BURST_MAX_BASE    8





#endif
